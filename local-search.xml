<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SourceTree操作备忘录</title>
    <link href="/2019/02/03/SourceTree%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <url>/2019/02/03/SourceTree%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="暂存："><a href="#暂存：" class="headerlink" title="暂存："></a>暂存：</h3><p>当你在A分支开发时，突然需要切换到B分支，这时你可以将变更暂存，等你在B分支处理完成后，再切换到A分支应用暂存</p><h3 id="重置所有："><a href="#重置所有：" class="headerlink" title="重置所有："></a>重置所有：</h3><p>如果你的未暂存文件中里面有非常多的文件需要丢弃变更，可以使用重置所有一次搞定</p><h3 id="回退撤销："><a href="#回退撤销：" class="headerlink" title="回退撤销："></a>回退撤销：</h3><p>不小心提交（commit）了一个文件，还没有推送到远端，这时希望回退到提交前的状态</p><ol><li>选中提交之前的节点，右键弹出菜单，选择”Reset xxx to this commit”</li><li>这时有三个选项“Soft”、“混合合并”、“强行合并”，对应的解释是“回退到暂存区”、“回退到未暂存区”、“丢弃所有变更”，选择第一或第二个选项</li></ol><h3 id="提交回滚："><a href="#提交回滚：" class="headerlink" title="提交回滚："></a>提交回滚：</h3><p>在git节点流选中某个节点（没有推送或已推送的都可以），右键菜单选择“提交回滚”，就将此节点的提交丢弃了</p><h3 id="遴选-："><a href="#遴选-：" class="headerlink" title="遴选 ："></a>遴选 ：</h3><p>假如你在A分支，你想把B分支里面的某个提交也作用到A分支里面，选中这个提交右键菜单选择”遴选“</p><h3 id="回滚到历史节点："><a href="#回滚到历史节点：" class="headerlink" title="回滚到历史节点："></a>回滚到历史节点：</h3><p>是”提交回滚“的进阶版，这个可以回滚到多个节点以前</p><ol><li>点击历史节点，重置到历史节点，选择强行合并</li><li>点击当前节点，重置到当前节点，选择Soft合并</li></ol>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
      <category>SourceTree</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>copy、mutableCopy</title>
    <link href="/2019/01/11/copy%E3%80%81mutableCopy/"/>
    <url>/2019/01/11/copy%E3%80%81mutableCopy/</url>
    
    <content type="html"><![CDATA[<p>copy：对于可变对象为深拷贝，引用计数不改变；对于不可变对象是浅拷贝， 引用计数每次加一。始终返回一个不可变对象。  </p><p>mutableCopy：始终是深拷贝，引用计数不改变。始终返回一个可变对象。</p><table><thead><tr><th align="center"></th><th align="center">copy</th><th align="center">mutableCopy</th></tr></thead><tbody><tr><td align="center">不可变对象</td><td align="center">不可变对象（浅拷贝）</td><td align="center">可变对象（深拷贝）</td></tr><tr><td align="center">可变对象</td><td align="center">不可变对象（深拷贝）</td><td align="center">可变对象（深拷贝）</td></tr></tbody></table><p>浅拷贝：指针拷贝<br>深拷贝：内容拷贝</p>]]></content>
    
    
    <categories>
      
      <category>Foundation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 格式化日期时间</title>
    <link href="/2019/01/01/iOS-%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/"/>
    <url>/2019/01/01/iOS-%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<p>常用：yyyy-MM-dd HH:mm:ss</p><p>字符说明<br>(:)</p><p>时间分隔符。在某些区域设置中，可以使用其他字符表示时间分隔符。时间分隔符在格式化时间值时分隔小时、分钟和秒。格式化输出中用作时间分隔符的实际字符由您的应用程序的当前区域性值确定。</p><p>(&#x2F;)</p><p>日期分隔符。在某些区域设置中，可以使用其他字符表示日期分隔符。日期分隔符在格式化日期值时分隔日、月和年。格式化输出中用作日期分隔符的实际字符由您的应用程序的当前区域性确定。</p><p>(%)</p><p>用于表明不论尾随什么字母，随后字符都应该以单字母格式读取。也用于表明单字母格式应以用户定义格式读取。有关更多详细信息，请参见下面的内容。</p><p>d</p><p>将日显示为不带前导零的数字（如 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %d。</p><p>dd</p><p>将日显示为带前导零的数字（如 01）。</p><p>EEE</p><p>将日显示为缩写形式（例如 Sun）。</p><p>EEEE</p><p>将日显示为全名（例如 Sunday）。</p><p>M</p><p>将月份显示为不带前导零的数字（如一月表示为 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %M。</p><p>MM</p><p>将月份显示为带前导零的数字（例如 01&#x2F;12&#x2F;01）。</p><p>MMM</p><p>将月份显示为缩写形式（例如 Jan）。</p><p>MMMM</p><p>将月份显示为完整月份名（例如 January）。</p><p>gg</p><p>显示时代&#x2F;纪元字符串（例如 A.D.）</p><p>h</p><p>使用 12 小时制将小时显示为不带前导零的数字（例如 1:15:15 PM）。如果这是用户定义的数字格式中的唯一字符，请使用 %h。</p><p>hh</p><p>使用 12 小时制将小时显示为带前导零的数字（例如 01:15:15 PM）。</p><p>H</p><p>使用 24 小时制将小时显示为不带前导零的数字（例如 1:15:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %H。</p><p>HH</p><p>使用 24 小时制将小时显示为带前导零的数字（例如 01:15:15）。</p><p>m</p><p>将分钟显示为不带前导零的数字（例如 12:1:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %m。</p><p>mm</p><p>将分钟显示为带前导零的数字（例如 12:01:15）。</p><p>s</p><p>将秒显示为不带前导零的数字（例如 12:15:5）。如果这是用户定义的数字格式中的唯一字符，请使用 %s。</p><p>ss</p><p>将秒显示为带前导零的数字（例如 12:15:05）。</p><p>f</p><p>显示秒的小数部分。例如，ff 将精确显示到百分之一秒，而 ffff 将精确显示到万分之一秒。用户定义格式中最多可使用七个 f 符号。如果这是用户定义的数字格式中的唯一字符，请使用 %f。</p><p>t</p><p>使用 12 小时制，并对中午之前的任一小时显示大写的 A，对中午到 11:59 P.M 之间的任一小时显示大写的 P。如果这是用户定义的数字格式中的唯一字符，请使用 %t。</p><p>tt</p><p>对于使用 12 小时制的区域设置，对中午之前任一小时显示大写的 AM，对中午到 11:59 P.M 之间的任一小时显示大写的 PM。</p><p>对于使用 24 小时制的区域设置，不显示任何字符。</p><p>y</p><p>将年份 (0-9) 显示为不带前导零的数字。如果这是用户定义的数字格式中的唯一字符，请使用 %y。</p><p>yy</p><p>以带前导零的两位数字格式显示年份（如果适用）。</p><p>yyy</p><p>以四位数字格式显示年份。</p><p>yyyy</p><p>以四位数字格式显示年份。</p><p>z</p><p>显示不带前导零的时区偏移量（如 -8）。如果这是用户定义的数字格式中的唯一字符，请使用 %z。</p><p>zz</p><p>显示带前导零的时区偏移量（例如 -08）</p><p>zzz</p><p>显示完整的时区偏移量（例如 -08:00）</p>]]></content>
    
    
    <categories>
      
      <category>Foundation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>快速创建UIBarButtonItem</title>
    <link href="/2018/05/11/%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAUIBarButtonItem/"/>
    <url>/2018/05/11/%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAUIBarButtonItem/</url>
    
    <content type="html"><![CDATA[<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#import <span class="hljs-string">&lt;UIKit/UIKit.h&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">UIBarButtonItem</span> (<span class="hljs-title">ZDExtension</span>)</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> font=16,白色</span><br><span class="hljs-comment"> */</span><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithTitle:(<span class="hljs-built_in">NSString</span> *)title<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 可自定义title的富文本</span><br><span class="hljs-comment"> */</span><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithTitle:(<span class="hljs-built_in">NSString</span> *)title<br>                   attributes:(<span class="hljs-built_in">NSDictionary</span> *)attributes<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 使用initWithCustomView</span><br><span class="hljs-comment"> */</span><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithImage:(<span class="hljs-built_in">NSString</span> *)image<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action;<br><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithImage:(<span class="hljs-built_in">NSString</span> *)image<br>             highlightedImage:(<span class="hljs-built_in">NSString</span> *)highlightedImage<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#import <span class="hljs-string">&quot;UIBarButtonItem+ZDExtension.h&quot;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">UIBarButtonItem</span> (<span class="hljs-title">ZDExtension</span>)</span><br><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithTitle:(<span class="hljs-built_in">NSString</span> *)title<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action<br>&#123;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-keyword">self</span> itemWithTitle:title<br>                    attributes:@&#123;<span class="hljs-built_in">NSFontAttributeName</span> : [<span class="hljs-built_in">UIFont</span> systemFontOfSize:<span class="hljs-number">16</span>],<br>                                 <span class="hljs-built_in">NSForegroundColorAttributeName</span> : [<span class="hljs-built_in">UIColor</span> whiteColor]&#125;<br>                        target:target<br>                        action:action];<br>&#125;<br><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithTitle:(<span class="hljs-built_in">NSString</span> *)title<br>                   attributes:(<span class="hljs-built_in">NSDictionary</span> *)attributes<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action<br>&#123;<br>    <span class="hljs-built_in">UIButton</span> *button = [<span class="hljs-built_in">UIButton</span> buttonWithType:<span class="hljs-built_in">UIButtonTypeSystem</span>];<br>    [button setTitle:title forState:<span class="hljs-built_in">UIControlStateNormal</span>];<br>    [button setTitleColor:attributes[<span class="hljs-built_in">NSForegroundColorAttributeName</span>] forState:<span class="hljs-built_in">UIControlStateNormal</span>];<br>    button.titleLabel.font = attributes[<span class="hljs-built_in">NSFontAttributeName</span>];<br>    [button sizeToFit];<br>    [button addTarget:target action:action forControlEvents:<span class="hljs-built_in">UIControlEventTouchUpInside</span>];<br>    <span class="hljs-keyword">return</span> [[<span class="hljs-keyword">self</span> alloc] initWithCustomView:button];<br>&#125;<br><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithImage:(<span class="hljs-built_in">NSString</span> *)image<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action<br>&#123;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-keyword">self</span> itemWithImage:image<br>              highlightedImage:<span class="hljs-literal">nil</span><br>                        target:target<br>                        action:action];<br>&#125;<br><br>+ (<span class="hljs-keyword">instancetype</span>)itemWithImage:(<span class="hljs-built_in">NSString</span> *)image<br>             highlightedImage:(<span class="hljs-built_in">NSString</span> *)highlightedImage<br>                       target:(<span class="hljs-type">id</span>)target<br>                       action:(SEL)action<br>&#123;<br>    <span class="hljs-built_in">UIButton</span> *button = [<span class="hljs-built_in">UIButton</span> buttonWithType:<span class="hljs-built_in">UIButtonTypeCustom</span>];<br>    [button setImage:[<span class="hljs-built_in">UIImage</span> imageNamed:image] forState:<span class="hljs-built_in">UIControlStateNormal</span>];<br>    [button setImage:[<span class="hljs-built_in">UIImage</span> imageNamed:highlightedImage] forState:<span class="hljs-built_in">UIControlStateHighlighted</span>];<br>    [button sizeToFit];<br>    [button addTarget:target action:action forControlEvents:<span class="hljs-built_in">UIControlEventTouchUpInside</span>];<br>    <span class="hljs-keyword">return</span> [[<span class="hljs-keyword">self</span> alloc] initWithCustomView:button];<br>&#125;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>防止navigation多次push一个页面</title>
    <link href="/2018/03/21/%E9%98%B2%E6%AD%A2navigation%E5%A4%9A%E6%AC%A1push%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2/"/>
    <url>/2018/03/21/%E9%98%B2%E6%AD%A2navigation%E5%A4%9A%E6%AC%A1push%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p>场景：快速多次点击cell跳转到另一个页面，另一个页面被push多次。</p><p>原因：push后的页面有耗时操作或者刚好push到另一个页面时，另一个页面正好在reloadData卡住主线程。造成点击cell时卡住了。</p><p>解决方法：在基类导航控制器中重写导航控制器的push方法。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#import <span class="hljs-string">&quot;ZDBaseNavigationController.h&quot;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">ZDBaseNavigationController</span> ()&lt;<span class="hljs-title">UINavigationControllerDelegate</span>&gt;</span><br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">getter</span>=isPushing) <span class="hljs-type">BOOL</span> pushing;<span class="hljs-comment">///&lt; 是否正在push，防止多次push同一个VC</span><br><span class="hljs-keyword">@end</span><br><br><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">ZDBaseNavigationController</span></span><br><br>- (<span class="hljs-type">void</span>)viewDidLoad &#123;<br>    [<span class="hljs-variable language_">super</span> viewDidLoad];<br><br>    <span class="hljs-keyword">self</span>.delegate = <span class="hljs-keyword">self</span>;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - Push</span><br>- (<span class="hljs-type">void</span>)pushViewController:(<span class="hljs-built_in">UIViewController</span> *)viewController animated:(<span class="hljs-type">BOOL</span>)animated &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">self</span>.isPushing) &#123;<br>        <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@&quot;拦截多次push同一个VC&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">self</span>.pushing = <span class="hljs-literal">YES</span>;<br>    &#125;<br>    <br>    [<span class="hljs-variable language_">super</span> pushViewController:viewController animated:animated];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)navigationController:(<span class="hljs-built_in">UINavigationController</span> *)navigationController<br>       didShowViewController:(<span class="hljs-built_in">UIViewController</span> *)viewController<br>                    animated:(<span class="hljs-type">BOOL</span>)animated<br>&#123;<br>    <span class="hljs-keyword">self</span>.pushing = <span class="hljs-literal">NO</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 添加类前缀、修改类名</title>
    <link href="/2018/01/18/iOS-%E6%B7%BB%E5%8A%A0%E7%B1%BB%E5%89%8D%E7%BC%80%E3%80%81%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D/"/>
    <url>/2018/01/18/iOS-%E6%B7%BB%E5%8A%A0%E7%B1%BB%E5%89%8D%E7%BC%80%E3%80%81%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="修改已有类的名称"><a href="#修改已有类的名称" class="headerlink" title="修改已有类的名称"></a>修改已有类的名称</h1><p>新建一个工程后，默认的AppDelegate.h，AppDelegate.m 和 ViewController.h，ViewController.m都是没有前缀的，如果你想给他们都加上前缀，可以点开AppDelegate.h，选中AppDelegate，右键－Refactor－Rename，</p><p><img src="/Users/gzd/Desktop/MyBlog/source/img/111.png" alt="111"></p><p>然后自己加上前缀（我加的是My)，然后点击Preview，</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-fea9a09dcfe3de30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-8d311cb22edfc21e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>save一下就好了，可以看到AppDelegate就变成了MyAppDelegate：</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-6b203dbd8f86e734.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>同样的操作应用于ViewController文件，就可以添加前缀了。</p><h1 id="统一添加类前缀"><a href="#统一添加类前缀" class="headerlink" title="统一添加类前缀"></a>统一添加类前缀</h1><p>如果想要在之后新建的所有类都加上前缀，就需要在Class Prefix处加上自己的前缀：</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-bd83b4eb6a6ffe73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>之后新建一个类就会自动有一个前缀了，如下图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-85ea551b9cba5fb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>Xcode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CocoaPods更新技巧</title>
    <link href="/2018/01/15/CocoaPods%E6%9B%B4%E6%96%B0%E6%8A%80%E5%B7%A7/"/>
    <url>/2018/01/15/CocoaPods%E6%9B%B4%E6%96%B0%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<p>不更新podspec</p><p>CocoaPods 在执行 pod install 和 pod update 时，会默认先更新一次 Podspec 索引。使用 –no-repo-update 参数可以禁止其做索引更新操作。如下所示：</p><p>pod install –no-repo-update<br>pod update –no-repo-update</p>]]></content>
    
    
    <categories>
      
      <category>CocoaPods</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>XCode9的新变化</title>
    <link href="/2018/01/10/XCode9%E7%9A%84%E6%96%B0%E5%8F%98%E5%8C%96/"/>
    <url>/2018/01/10/XCode9%E7%9A%84%E6%96%B0%E5%8F%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="1-折叠代码"><a href="#1-折叠代码" class="headerlink" title="1.折叠代码"></a>1.折叠代码</h1><p>焦点在方法的实现体的方法名上,按comman键,则整个函数会被框住.用来标志这个方法的起点和终点</p><p>此时单击,出现菜单</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-b370448f6270a193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在菜单里,有个Fold,可以用来折叠方法,这个折叠现在有个动画效果</p><p>常用的重构方式都已经集成在这个右键弹出菜单中了,可见,XCode9对于重构的支持度又增加了,以后重构代码将更加方便快捷</p><p>在XCode9之前,在变量或方法上,按CMD+单击,是直接Jump to Definition,但是现在,是弹出这个菜单,对于跳转到变量的定义,就多了一步了,开始可能会觉得不方便</p><p>对于想直接跳转到变量定义,现在是 control+command+单击</p><p>当然,如果你还是觉得以前的cmd+单击 跳转到变量定义,你更习惯,可以在</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-e6e600520c76877d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>更改为以前那种行为</p><h1 id="2-rename"><a href="#2-rename" class="headerlink" title="2.rename"></a>2.rename</h1><p>对一个方法或者变量的重命名,在方法上CMD+单击,出现的菜单,选择rename</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-1793467b32024e4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>可以看到,它把重命名会出现的改动,都动画折叠起来,让你更有概念,将会影响哪些,更直观!</p><h1 id="3-Folder和Group的同步性"><a href="#3-Folder和Group的同步性" class="headerlink" title="3.Folder和Group的同步性"></a>3.Folder和Group的同步性</h1><p>之前,我们在XCode中,更改Folder的名字,在FInder中工程对应的文件夹的名字并不会同步的改变,这会造成我们重命名文件夹变得非常不方便,往往要先在XCode中移除,然后在Finder中重命名,再添加回Xcode</p><p>现在 在Xcode9中重名命Folder,Finder中的也同步的改变了</p><p>我们之前建议一个虚拟的group,并不会在对应的文件夹中建立真实的目录,当然,这可能是你需要的,也可能是你不需要的功能.在9中,默认行为改变了.变成了会建立对应的真实文件夹.如果还想像之前那样只是建立虚拟的group,需要选择New Group without Folder</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-3b8d699dad04f4ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>你可能你会担心,区分不了这个group到底是虚拟的,还是实际的</p><p>放心,苹果给出了标识来区分的,虚拟的左下角有个小的三角形</p><p>当你移动一个Group的时候(虚拟的实际的都一样),它会同步的把对应的真实文件夹也移动到对应的位置,这个极大的方便了我们后期调整工程的目录结构,之前调整那才叫痛苦,在工程中调整了后,工程中的结构和真实的文件夹下的对应不上,以后不会出现这种情况了</p>]]></content>
    
    
    <categories>
      
      <category>Xcode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>NS_OPTIONS的用法</title>
    <link href="/2018/01/09/NS-OPTIONS%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <url>/2018/01/09/NS-OPTIONS%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>NS_OPTIONS主要用于多选选项，表示一个选项集合</p><p>定义：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">typedef NS_OPTIONS(NSUInteger, MyOption) &#123;<br>  MyOptionNone = <span class="hljs-number">0</span>, <span class="hljs-regexp">//</span>二进制<span class="hljs-number">0000</span>,十进制<span class="hljs-number">0</span><br>  MyOption1 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">0</span>,<span class="hljs-regexp">//</span><span class="hljs-number">0001</span>,<span class="hljs-number">1</span><br>  MyOption2 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">1</span>,<span class="hljs-regexp">//</span><span class="hljs-number">0010</span>,<span class="hljs-number">2</span><br>  MyOption3 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,<span class="hljs-regexp">//</span><span class="hljs-number">0100</span>,<span class="hljs-number">4</span><br>  MyOption4 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,<span class="hljs-regexp">//</span><span class="hljs-number">1000</span>,<span class="hljs-number">8</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>使用：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>声明定义枚举变量<br>MyOption option = MyOption1 | MyOption2;<span class="hljs-regexp">//</span><span class="hljs-number">0001</span> | <span class="hljs-number">0010</span> = <span class="hljs-number">0011</span>,<span class="hljs-number">3</span><br><br><span class="hljs-regexp">//</span>检查是否包含某选型<br><span class="hljs-keyword">if</span> (option &amp; MyOption3) &#123; <span class="hljs-regexp">//</span><span class="hljs-number">0011</span> &amp; <span class="hljs-number">0100</span> = <span class="hljs-number">0000</span><br>     <span class="hljs-regexp">//</span>包含MyOption3<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>     <span class="hljs-regexp">//</span>不包含MyOption3<br>&#125;<br><br><span class="hljs-regexp">//</span>增加选项<br>option = option | MyOption4;<span class="hljs-regexp">//</span><span class="hljs-number">0011</span> | <span class="hljs-number">1000</span> = <span class="hljs-number">1011</span>, <span class="hljs-number">11</span><br><span class="hljs-regexp">//</span>减少选项<br>option = option &amp; (~MyOption4);<span class="hljs-regexp">//</span><span class="hljs-number">1011</span> &amp; (~<span class="hljs-number">1000</span>) = <span class="hljs-number">1011</span> &amp; <span class="hljs-number">0111</span> = <span class="hljs-number">0011</span>, <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Foundation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 管理separator的UITableViewCell子类</title>
    <link href="/2017/12/20/iOS-%E7%AE%A1%E7%90%86separator%E7%9A%84UITableViewCell%E5%AD%90%E7%B1%BB/"/>
    <url>/2017/12/20/iOS-%E7%AE%A1%E7%90%86separator%E7%9A%84UITableViewCell%E5%AD%90%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@interface</span> <span class="hljs-attribute">ZDBaseTableViewCell </span>: UITableViewCell<br><br><span class="hljs-variable">@property</span> (nonatomic, assign) BOOL showsSeparator;<span class="hljs-comment">// default is YES</span><br><span class="hljs-variable">@property</span> (nonatomic, assign) CGFloat separatorLeading;<span class="hljs-comment">// default is 15.f</span><br><br><span class="hljs-variable">@end</span><br></code></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">ZDBaseTableViewCell</span> ()</span><br><br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">CALayer</span> *separatorLayer;<br><br><span class="hljs-keyword">@end</span><br><br><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">ZDBaseTableViewCell</span></span><br><br>- (<span class="hljs-type">void</span>)awakeFromNib &#123;<br>    [<span class="hljs-variable language_">super</span> awakeFromNib];<br>    <span class="hljs-comment">// Initialization code</span><br>&#125;<br><br>- (<span class="hljs-keyword">instancetype</span>)initWithStyle:(<span class="hljs-built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="hljs-built_in">NSString</span> *)reuseIdentifier &#123;<br>    <span class="hljs-keyword">self</span> = [<span class="hljs-variable language_">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">self</span>) &#123;<br>        [<span class="hljs-keyword">self</span> setup];<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>;<br>&#125;<br><br>- (<span class="hljs-keyword">instancetype</span>)initWithCoder:(<span class="hljs-built_in">NSCoder</span> *)aDecoder &#123;<br>    <span class="hljs-keyword">self</span> = [<span class="hljs-variable language_">super</span> initWithCoder:aDecoder];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">self</span>) &#123;<br>        [<span class="hljs-keyword">self</span> setup];<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>;<br>&#125;<br><br>- (<span class="hljs-type">void</span>)setup &#123;<br>    <span class="hljs-comment">// 默认15</span><br>    _separatorLeading = <span class="hljs-number">15.</span>f;<br>    _showsSeparator = <span class="hljs-literal">YES</span>;<br>    <br>    <span class="hljs-comment">// 设置选中颜色</span><br><span class="hljs-comment">//    self.selectedBackgroundView = [[UIView alloc] initWithFrame:self.bounds];</span><br><span class="hljs-comment">//    self.selectedBackgroundView.backgroundColor = [UIColor zd_separatorColor];</span><br>    <br>    <span class="hljs-comment">// 设置分隔线</span><br>    _separatorLayer = [[<span class="hljs-built_in">CALayer</span> alloc] init];<br>    _separatorLayer.backgroundColor = [<span class="hljs-built_in">UIColor</span> zd_separatorColor].CGColor;<br>    [<span class="hljs-keyword">self</span>.layer addSublayer:_separatorLayer];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)setShowsSeparator:(<span class="hljs-type">BOOL</span>)showsSeparator &#123;<br>    _showsSeparator = showsSeparator;<br>    _separatorLayer.hidden = !showsSeparator;<br>&#125;<br><br>- (<span class="hljs-type">void</span>)layoutSubviews &#123;<br>    [<span class="hljs-variable language_">super</span> layoutSubviews];<br>    <br>    <span class="hljs-keyword">if</span> (_showsSeparator) &#123;<br>        [<span class="hljs-built_in">UIView</span> setAnimationsEnabled:<span class="hljs-literal">NO</span>];<br>        <span class="hljs-keyword">self</span>.separatorLayer.frame = <span class="hljs-built_in">CGRectMake</span>(_separatorLeading, <span class="hljs-built_in">CGRectGetHeight</span>(<span class="hljs-keyword">self</span>.bounds) - SINGLE_LINE_ADJUST_OFFSET, <span class="hljs-built_in">CGRectGetWidth</span>(<span class="hljs-keyword">self</span>.bounds) - _separatorLeading, SINGLE_LINE_HEIGHT);<br>        [<span class="hljs-built_in">UIView</span> setAnimationsEnabled:<span class="hljs-literal">YES</span>];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 图片压缩</title>
    <link href="/2017/12/10/iOS-%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/"/>
    <url>/2017/12/10/iOS-%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/</url>
    
    <content type="html"><![CDATA[<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">UIImage</span> (<span class="hljs-title">ZDCompress</span>)</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 将图片压缩到指定宽度，保持原来图片的宽高比</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> @param width 图片宽度</span><br><span class="hljs-comment"> @return image</span><br><span class="hljs-comment"> */</span><br>- (<span class="hljs-built_in">UIImage</span> *)zd_compressToWidth:(<span class="hljs-built_in">CGFloat</span>)width;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 将图片在子线程中压缩，block在主线程回调，保证压缩到指定大小，尽量减少失真</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment"> @param length 大小，100K就是100*1024</span><br><span class="hljs-comment"> @param block 完成回调</span><br><span class="hljs-comment"> */</span><br>- (<span class="hljs-type">void</span>)zd_compressToDataLength:(<span class="hljs-built_in">NSInteger</span>)length block:(<span class="hljs-type">void</span>(^)(<span class="hljs-built_in">NSData</span> *data))block;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">- (<span class="hljs-built_in">UIImage</span> *)zd_compressToWidth:(<span class="hljs-built_in">CGFloat</span>)width &#123;<br>    <span class="hljs-keyword">if</span> (width &lt;= <span class="hljs-number">0</span> || [<span class="hljs-keyword">self</span> isKindOfClass:[<span class="hljs-built_in">NSNull</span> <span class="hljs-keyword">class</span>]]) <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>;<br>    <span class="hljs-keyword">if</span> (width &gt;= <span class="hljs-keyword">self</span>.size.width) <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>;<br>    <span class="hljs-built_in">CGSize</span> newSize = <span class="hljs-built_in">CGSizeMake</span>(width, width * (<span class="hljs-keyword">self</span>.size.height / <span class="hljs-keyword">self</span>.size.width));<br>    <span class="hljs-built_in">UIGraphicsBeginImageContext</span>(newSize);<br>    [<span class="hljs-keyword">self</span> drawInRect:<span class="hljs-built_in">CGRectMake</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, newSize.width, newSize.height)];<br>    <span class="hljs-built_in">UIImage</span> *newImage = <span class="hljs-built_in">UIGraphicsGetImageFromCurrentImageContext</span>();<br>    <span class="hljs-built_in">UIGraphicsEndImageContext</span>();<br>    <span class="hljs-keyword">return</span> newImage;<br>&#125;<br><br>- (<span class="hljs-type">void</span>)zd_compressToDataLength:(<span class="hljs-built_in">NSInteger</span>)length block:(<span class="hljs-type">void</span>(^)(<span class="hljs-built_in">NSData</span> *data))block &#123;<br>    <span class="hljs-keyword">if</span> (length &lt;= <span class="hljs-number">0</span> || [<span class="hljs-keyword">self</span> isKindOfClass:[<span class="hljs-built_in">NSNull</span> <span class="hljs-keyword">class</span>]]) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">NSData</span> *originalData = <span class="hljs-built_in">UIImagePNGRepresentation</span>(<span class="hljs-keyword">self</span>);<br>    <span class="hljs-keyword">if</span> (length &gt;= originalData.length) &#123;<br>        block(originalData);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-built_in">dispatch_async</span>(dispatch_get_global_queue(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), ^&#123;<br>        <span class="hljs-built_in">UIImage</span> *newImage = [<span class="hljs-keyword">self</span> <span class="hljs-keyword">copy</span>];<br>        <span class="hljs-built_in">NSData</span> *data = <span class="hljs-built_in">UIImageJPEGRepresentation</span>(newImage, <span class="hljs-number">1.0</span>);<br>        <span class="hljs-keyword">if</span> (data.length / <span class="hljs-number">1024</span> &lt; <span class="hljs-number">1024</span>) &#123;<br>            <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@&quot;图片压缩前的大小：%luKB&quot;</span>, data.length / <span class="hljs-number">1024</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@&quot;图片压缩前的大小：%.2fMB&quot;</span>, (<span class="hljs-type">float</span>)data.length / <span class="hljs-number">1024</span> / <span class="hljs-number">1024</span>);<br>        &#125;<br>        <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@&quot;------------------图片开始压缩------------------&quot;</span>);<br>        <span class="hljs-built_in">CGFloat</span> scale = <span class="hljs-number">0.9</span>;<br>        <span class="hljs-built_in">NSData</span> *jpgData = <span class="hljs-built_in">UIImageJPEGRepresentation</span>(newImage, scale);<br>        <span class="hljs-keyword">while</span> (jpgData.length &gt; length) &#123;<br>            newImage = [newImage zd_compressToWidth:newImage.size.width * scale];<br>            <span class="hljs-built_in">NSData</span> *newImageData = <span class="hljs-built_in">UIImageJPEGRepresentation</span>(newImage, <span class="hljs-number">0.0</span>);<br>            <span class="hljs-keyword">if</span> (newImageData.length &lt; length) &#123;<br>                newImageData = <span class="hljs-built_in">UIImageJPEGRepresentation</span>(newImage, scale);<br>                <span class="hljs-keyword">while</span> (newImageData.length &gt; length) &#123;<br>                    scale -= <span class="hljs-number">0.1</span>;<br>                    <span class="hljs-keyword">if</span> (scale &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<br>                    newImageData = <span class="hljs-built_in">UIImageJPEGRepresentation</span>(newImage, scale);<br>                &#125;<br>                <span class="hljs-built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;<br>                    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@&quot;------------------图片完成压缩------------------&quot;</span>);<br>                    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@&quot;图片压缩后的大小：%luKB&quot;</span>, newImageData.length / <span class="hljs-number">1024</span>);<br>                    block(newImageData);<br>                &#125;);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>    &#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 根据颜色和文字生成图片</title>
    <link href="/2017/12/02/iOS-%E6%A0%B9%E6%8D%AE%E9%A2%9C%E8%89%B2%E5%92%8C%E6%96%87%E5%AD%97%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87/"/>
    <url>/2017/12/02/iOS-%E6%A0%B9%E6%8D%AE%E9%A2%9C%E8%89%B2%E5%92%8C%E6%96%87%E5%AD%97%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 绘制图片</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment"> @param color 背景色</span><br><span class="hljs-comment"> @param size 大小</span><br><span class="hljs-comment"> @param text 文字</span><br><span class="hljs-comment"> @param textAttributes 字体设置</span><br><span class="hljs-comment"> @param isCircular 是否圆形</span><br><span class="hljs-comment"> @return 图片</span><br><span class="hljs-comment"> */</span><br>+ (UIImage *)zd_imageWithColor:(UIColor *)color<br>                          size:(CGSize)size<br>                          text:(NSString *)text<br>                textAttributes:(NSDictionary *)textAttributes<br>                      circular:(BOOL)isCircular<br>&#123;<br>    <span class="hljs-keyword">if</span> (!color || size.width &lt;= <span class="hljs-number">0</span> || size.height &lt;= <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> nil;<br>    CGRect rect = <span class="hljs-built_in">CGRectMake</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, size.width, size.height);<br>    <span class="hljs-built_in">UIGraphicsBeginImageContextWithOptions</span>(rect.size, NO, <span class="hljs-number">0</span>);<br>    CGContextRef context = <span class="hljs-built_in">UIGraphicsGetCurrentContext</span>();<br>    <br>    <span class="hljs-comment">// circular</span><br>    <span class="hljs-keyword">if</span> (isCircular) &#123;<br>        CGPathRef path = <span class="hljs-built_in">CGPathCreateWithEllipseInRect</span>(rect, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-built_in">CGContextAddPath</span>(context, path);<br>        <span class="hljs-built_in">CGContextClip</span>(context);<br>        <span class="hljs-built_in">CGPathRelease</span>(path);<br>    &#125;<br>    <br>    <span class="hljs-comment">// color</span><br>    <span class="hljs-built_in">CGContextSetFillColorWithColor</span>(context, color.CGColor);<br>    <span class="hljs-built_in">CGContextFillRect</span>(context, rect);<br>    <br>    <span class="hljs-comment">// text</span><br>    CGSize textSize = [text sizeWithAttributes:textAttributes];<br>    [text drawInRect:<span class="hljs-built_in">CGRectMake</span>((size.width - textSize.width) / <span class="hljs-number">2</span>, (size.height - textSize.height) / <span class="hljs-number">2</span>, textSize.width, textSize.height) withAttributes:textAttributes];<br>    <br>    UIImage *image = <span class="hljs-built_in">UIGraphicsGetImageFromCurrentImageContext</span>();<br>    <span class="hljs-built_in">UIGraphicsEndImageContext</span>();<br>    <span class="hljs-keyword">return</span> image;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Foundation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS Button内的图片和文字的自由排列</title>
    <link href="/2017/11/30/iOS-Button%E5%86%85%E7%9A%84%E5%9B%BE%E7%89%87%E5%92%8C%E6%96%87%E5%AD%97%E7%9A%84%E8%87%AA%E7%94%B1%E6%8E%92%E5%88%97/"/>
    <url>/2017/11/30/iOS-Button%E5%86%85%E7%9A%84%E5%9B%BE%E7%89%87%E5%92%8C%E6%96%87%E5%AD%97%E7%9A%84%E8%87%AA%E7%94%B1%E6%8E%92%E5%88%97/</url>
    
    <content type="html"><![CDATA[<p>转自：<a href="https://github.com/Phelthas/Demo_ButtonImageTitleEdgeInsets">https://github.com/Phelthas/Demo_ButtonImageTitleEdgeInsets</a></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#import <span class="hljs-string">&lt;UIKit/UIKit.h&gt;</span></span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-built_in">NS_ENUM</span>(<span class="hljs-built_in">NSInteger</span>, LXMImagePosition) &#123;<br>    LXMImagePositionLeft = <span class="hljs-number">0</span>,              <span class="hljs-comment">//图片在左，文字在右，默认</span><br>    LXMImagePositionRight = <span class="hljs-number">1</span>,             <span class="hljs-comment">//图片在右，文字在左</span><br>    LXMImagePositionTop = <span class="hljs-number">2</span>,               <span class="hljs-comment">//图片在上，文字在下</span><br>    LXMImagePositionBottom = <span class="hljs-number">3</span>,            <span class="hljs-comment">//图片在下，文字在上</span><br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">UIButton</span> (<span class="hljs-title">LXMImagePosition</span>)</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  利用UIButton的titleEdgeInsets和imageEdgeInsets来实现文字和图片的自由排列</span><br><span class="hljs-comment"> *  注意：这个方法需要在设置图片和文字之后才可以调用，且button的大小要大于 图片大小+文字大小+spacing</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *  @param spacing 图片和文字的间隔</span><br><span class="hljs-comment"> */</span><br>- (<span class="hljs-type">void</span>)setImagePosition:(LXMImagePosition)postion spacing:(<span class="hljs-built_in">CGFloat</span>)spacing;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">UIButton</span> (<span class="hljs-title">LXMImagePosition</span>)</span><br><br>- (<span class="hljs-type">void</span>)setImagePosition:(LXMImagePosition)postion spacing:(<span class="hljs-built_in">CGFloat</span>)spacing &#123;<br>    <span class="hljs-built_in">CGFloat</span> imageWith = <span class="hljs-keyword">self</span>.imageView.image.size.width;<br>    <span class="hljs-built_in">CGFloat</span> imageHeight = <span class="hljs-keyword">self</span>.imageView.image.size.height;<br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> clang diagnostic push</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> clang diagnostic ignored <span class="hljs-string">&quot;-Wdeprecated-declarations&quot;</span></span><br><span class="hljs-comment">//    CGFloat labelWidth = [self.titleLabel.text sizeWithFont:self.titleLabel.font].width;</span><br><span class="hljs-comment">//    CGFloat labelHeight = [self.titleLabel.text sizeWithFont:self.titleLabel.font].height;</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> clang diagnostic pop</span><br>    <br>    <span class="hljs-comment">// gzd 修改 16.9.28</span><br>    <span class="hljs-built_in">CGSize</span>  labelSize   = <span class="hljs-built_in">CGSizeZero</span>;<br>    <span class="hljs-built_in">CGFloat</span> labelWidth  = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">CGFloat</span> labelHeight = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> ([<span class="hljs-keyword">self</span>.titleLabel.text respondsToSelector:<span class="hljs-keyword">@selector</span>(boundingRectWithSize:options:attributes:context:)]) &#123;<br>        labelSize = [<span class="hljs-keyword">self</span>.titleLabel.text boundingRectWithSize:<span class="hljs-keyword">self</span>.bounds.size options:<span class="hljs-built_in">NSStringDrawingUsesLineFragmentOrigin</span> | <span class="hljs-built_in">NSStringDrawingUsesFontLeading</span> attributes:@&#123;<span class="hljs-built_in">NSFontAttributeName</span>:<span class="hljs-keyword">self</span>.titleLabel.font&#125; context:<span class="hljs-literal">nil</span>].size;<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> clang diagnostic push</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> clang diagnostic ignored <span class="hljs-string">&quot;-Wdeprecated-declarations&quot;</span></span><br>        labelSize = [<span class="hljs-keyword">self</span>.titleLabel.text sizeWithFont:<span class="hljs-keyword">self</span>.titleLabel.font];<br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> clang diagnostic pop</span><br>    &#125;<br>    labelWidth = labelSize.width;<br>    labelHeight = labelSize.height;<br>    <span class="hljs-comment">//----------------</span><br>    <br>    <span class="hljs-built_in">CGFloat</span> imageOffsetX = (imageWith + labelWidth) / <span class="hljs-number">2</span> - imageWith / <span class="hljs-number">2</span>;<span class="hljs-comment">//image中心移动的x距离</span><br>    <span class="hljs-built_in">CGFloat</span> imageOffsetY = imageHeight / <span class="hljs-number">2</span> + spacing / <span class="hljs-number">2</span>;<span class="hljs-comment">//image中心移动的y距离</span><br>    <span class="hljs-built_in">CGFloat</span> labelOffsetX = (imageWith + labelWidth / <span class="hljs-number">2</span>) - (imageWith + labelWidth) / <span class="hljs-number">2</span>;<span class="hljs-comment">//label中心移动的x距离</span><br>    <span class="hljs-built_in">CGFloat</span> labelOffsetY = labelHeight / <span class="hljs-number">2</span> + spacing / <span class="hljs-number">2</span>;<span class="hljs-comment">//label中心移动的y距离</span><br>    <br>    <span class="hljs-keyword">switch</span> (postion) &#123;<br>        <span class="hljs-keyword">case</span> LXMImagePositionLeft:<br>            <span class="hljs-keyword">self</span>.imageEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(<span class="hljs-number">0</span>, -spacing/<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, spacing/<span class="hljs-number">2</span>);<br>            <span class="hljs-keyword">self</span>.titleEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(<span class="hljs-number">0</span>, spacing/<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, -spacing/<span class="hljs-number">2</span>);<br>            <span class="hljs-keyword">break</span>;<br>            <br>        <span class="hljs-keyword">case</span> LXMImagePositionRight:<br>            <span class="hljs-keyword">self</span>.imageEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(<span class="hljs-number">0</span>, labelWidth + spacing/<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, -(labelWidth + spacing/<span class="hljs-number">2</span>));<br>            <span class="hljs-keyword">self</span>.titleEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(<span class="hljs-number">0</span>, -(imageHeight + spacing/<span class="hljs-number">2</span>), <span class="hljs-number">0</span>, imageHeight + spacing/<span class="hljs-number">2</span>);<br>            <span class="hljs-keyword">break</span>;<br>            <br>        <span class="hljs-keyword">case</span> LXMImagePositionTop:<br>            <span class="hljs-keyword">self</span>.imageEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(-imageOffsetY, imageOffsetX, imageOffsetY, -imageOffsetX);<br>            <span class="hljs-keyword">self</span>.titleEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(labelOffsetY, -labelOffsetX, -labelOffsetY, labelOffsetX);<br>            <span class="hljs-keyword">break</span>;<br>            <br>        <span class="hljs-keyword">case</span> LXMImagePositionBottom:<br>            <span class="hljs-keyword">self</span>.imageEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(imageOffsetY, imageOffsetX, -imageOffsetY, -imageOffsetX);<br>            <span class="hljs-keyword">self</span>.titleEdgeInsets = <span class="hljs-built_in">UIEdgeInsetsMake</span>(-labelOffsetY, -labelOffsetX, labelOffsetY, labelOffsetX);<br>            <span class="hljs-keyword">break</span>;<br>            <br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 自定义UIAlertController的title、message、button的颜色</title>
    <link href="/2017/11/28/iOS-%E8%87%AA%E5%AE%9A%E4%B9%89UIAlertController%E7%9A%84title%E3%80%81message%E3%80%81button%E7%9A%84%E9%A2%9C%E8%89%B2/"/>
    <url>/2017/11/28/iOS-%E8%87%AA%E5%AE%9A%E4%B9%89UIAlertController%E7%9A%84title%E3%80%81message%E3%80%81button%E7%9A%84%E9%A2%9C%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<p>有时设计要求改弹窗的颜色，so，改吧</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#import <span class="hljs-string">&lt;UIKit/UIKit.h&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">UIAlertAction</span> (<span class="hljs-title">ZDExtension</span>)</span><br><br>- (<span class="hljs-type">void</span>)zd_setTitleColor:(<span class="hljs-built_in">UIColor</span> *)color;<br><br><span class="hljs-keyword">@end</span><br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">UIAlertController</span> (<span class="hljs-title">ZDExtension</span>)</span><br><br>- (<span class="hljs-type">void</span>)zd_setTitleColor:(<span class="hljs-built_in">UIColor</span> *)color;<br><br>- (<span class="hljs-type">void</span>)zd_setAttributedTitle:(<span class="hljs-built_in">NSAttributedString</span> *)title;<br><br>- (<span class="hljs-type">void</span>)zd_setMessageColor:(<span class="hljs-built_in">UIColor</span> *)color;<br><br>- (<span class="hljs-type">void</span>)zd_setAttributedMessage:(<span class="hljs-built_in">NSAttributedString</span> *)message;<br><br>- (<span class="hljs-type">void</span>)zd_setActionTitleColor:(<span class="hljs-built_in">UIColor</span> *)color;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">UIAlertAction</span> (<span class="hljs-title">ZDExtension</span>)</span><br><br>- (<span class="hljs-type">void</span>)zd_setTitleColor:(<span class="hljs-built_in">UIColor</span> *)color &#123;<br>    [<span class="hljs-keyword">self</span> setValue:color forKey:<span class="hljs-string">@&quot;titleTextColor&quot;</span>];<br>&#125;<br><br><span class="hljs-keyword">@end</span><br><br><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">UIAlertController</span> (<span class="hljs-title">ZDExtension</span>)</span><br><br>- (<span class="hljs-type">void</span>)zd_setTitleColor:(<span class="hljs-built_in">UIColor</span> *)color &#123;<br>    <span class="hljs-built_in">NSAttributedString</span> *string = [[<span class="hljs-built_in">NSAttributedString</span> alloc] initWithString:<span class="hljs-keyword">self</span>.title attributes:@&#123;<span class="hljs-built_in">NSFontAttributeName</span>:[<span class="hljs-built_in">UIFont</span> systemFontOfSize:<span class="hljs-number">17</span>],<span class="hljs-built_in">NSForegroundColorAttributeName</span>:color&#125;];<br>    [<span class="hljs-keyword">self</span> zd_setAttributedTitle:string];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)zd_setAttributedTitle:(<span class="hljs-built_in">NSAttributedString</span> *)title &#123;<br>    [<span class="hljs-keyword">self</span> setValue:title forKey:<span class="hljs-string">@&quot;attributedTitle&quot;</span>];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)zd_setMessageColor:(<span class="hljs-built_in">UIColor</span> *)color &#123;<br>    <span class="hljs-built_in">NSAttributedString</span> *string = [[<span class="hljs-built_in">NSAttributedString</span> alloc] initWithString:<span class="hljs-keyword">self</span>.message attributes:@&#123;<span class="hljs-built_in">NSFontAttributeName</span>:[<span class="hljs-built_in">UIFont</span> systemFontOfSize:<span class="hljs-number">13</span>],<span class="hljs-built_in">NSForegroundColorAttributeName</span>:color&#125;];<br>    [<span class="hljs-keyword">self</span> zd_setAttributedMessage:string];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)zd_setAttributedMessage:(<span class="hljs-built_in">NSAttributedString</span> *)message &#123;<br>    [<span class="hljs-keyword">self</span> setValue:message forKey:<span class="hljs-string">@&quot;attributedMessage&quot;</span>];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)zd_setActionTitleColor:(<span class="hljs-built_in">UIColor</span> *)color &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">UIAlertAction</span> *action <span class="hljs-keyword">in</span> <span class="hljs-keyword">self</span>.actions) &#123;<br>        [action zd_setTitleColor:color];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 打印字典和数组中的中文</title>
    <link href="/2017/09/21/iOS-%E6%89%93%E5%8D%B0%E5%AD%97%E5%85%B8%E5%92%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%B8%AD%E6%96%87/"/>
    <url>/2017/09/21/iOS-%E6%89%93%E5%8D%B0%E5%AD%97%E5%85%B8%E5%92%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%B8%AD%E6%96%87/</url>
    
    <content type="html"><![CDATA[<h1 id="创建数组的分类"><a href="#创建数组的分类" class="headerlink" title="创建数组的分类"></a>创建数组的分类</h1><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">NSArray</span> (<span class="hljs-title">ZDLogHelper</span>)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> DEBUG</span><br><span class="hljs-comment">// NSLog数组对象时会调用此方法，将里面的中文在控制台打印出来</span><br>- (<span class="hljs-built_in">NSString</span> *)descriptionWithLocale:(<span class="hljs-keyword">nullable</span> <span class="hljs-type">id</span>)locale indent:(<span class="hljs-built_in">NSUInteger</span>)level &#123;<br>    <span class="hljs-keyword">if</span> ([<span class="hljs-built_in">NSJSONSerialization</span> isValidJSONObject:<span class="hljs-keyword">self</span>]) &#123;<br>        <span class="hljs-built_in">NSString</span> *logString;<br>        <span class="hljs-keyword">@try</span> &#123;<br>            logString = [[<span class="hljs-built_in">NSString</span> alloc] initWithData:[<span class="hljs-built_in">NSJSONSerialization</span> dataWithJSONObject:<span class="hljs-keyword">self</span> options:<span class="hljs-built_in">NSJSONWritingPrettyPrinted</span> error:<span class="hljs-literal">nil</span>] encoding:<span class="hljs-built_in">NSUTF8StringEncoding</span>];<br>        &#125; <span class="hljs-keyword">@catch</span> (<span class="hljs-built_in">NSException</span> *exception) &#123;<br>            logString = [<span class="hljs-built_in">NSString</span> stringWithFormat:<span class="hljs-string">@&quot;打印数组时转换失败：%@&quot;</span>,exception.reason];<br>        &#125; <span class="hljs-keyword">@finally</span> &#123;<br>            <span class="hljs-keyword">return</span> logString;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">NSMutableString</span> *string = [<span class="hljs-built_in">NSMutableString</span> stringWithString:<span class="hljs-string">@&quot;&#123;\n&quot;</span>];<br>    [<span class="hljs-keyword">self</span> enumerateObjectsUsingBlock:^(<span class="hljs-type">id</span>  _Nonnull obj, <span class="hljs-built_in">NSUInteger</span> idx, <span class="hljs-type">BOOL</span> * _Nonnull stop) &#123;<br>        [string appendFormat:<span class="hljs-string">@&quot;\t%@,\n&quot;</span>, obj];<br>    &#125;];<br>    [string appendString:<span class="hljs-string">@&quot;&#125;\n&quot;</span>];<br>    <span class="hljs-keyword">return</span> string;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><h1 id="创建字典的分类"><a href="#创建字典的分类" class="headerlink" title="创建字典的分类"></a>创建字典的分类</h1><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">NSDictionary</span> (<span class="hljs-title">ZDLogHelper</span>)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> DEBUG</span><br><span class="hljs-comment">// NSLog字典对象时会调用此方法，将里面的中文在控制台打印出来</span><br>- (<span class="hljs-built_in">NSString</span> *)descriptionWithLocale:(<span class="hljs-keyword">nullable</span> <span class="hljs-type">id</span>)locale indent:(<span class="hljs-built_in">NSUInteger</span>)level &#123;<br>    <span class="hljs-comment">// 此注释掉的版本有缺陷，当self里面包含json转换不支持的类型时会报错：Invalid type in JSON write</span><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    NSString *logString;</span><br><span class="hljs-comment">    @try &#123;</span><br><span class="hljs-comment">        logString = [[NSString alloc] initWithData:[NSJSONSerialization dataWithJSONObject:self options:NSJSONWritingPrettyPrinted error:nil] encoding:NSUTF8StringEncoding];</span><br><span class="hljs-comment">    &#125; @catch (NSException *exception) &#123;</span><br><span class="hljs-comment">        logString = [NSString stringWithFormat:@&quot;打印字典时转换失败：%@&quot;,exception.reason];</span><br><span class="hljs-comment">    &#125; @finally &#123;</span><br><span class="hljs-comment">        return logString;</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">     */</span><br>    <br>    <span class="hljs-comment">// 以下为两种方式结合处理</span><br>    <span class="hljs-keyword">if</span> ([<span class="hljs-built_in">NSJSONSerialization</span> isValidJSONObject:<span class="hljs-keyword">self</span>]) &#123;<br>        <span class="hljs-built_in">NSString</span> *logString;<br>        <span class="hljs-keyword">@try</span> &#123;<br>            logString = [[<span class="hljs-built_in">NSString</span> alloc] initWithData:[<span class="hljs-built_in">NSJSONSerialization</span> dataWithJSONObject:<span class="hljs-keyword">self</span> options:<span class="hljs-built_in">NSJSONWritingPrettyPrinted</span> error:<span class="hljs-literal">nil</span>] encoding:<span class="hljs-built_in">NSUTF8StringEncoding</span>];<br>        &#125; <span class="hljs-keyword">@catch</span> (<span class="hljs-built_in">NSException</span> *exception) &#123;<br>            logString = [<span class="hljs-built_in">NSString</span> stringWithFormat:<span class="hljs-string">@&quot;打印字典时转换失败：%@&quot;</span>,exception.reason];<br>        &#125; <span class="hljs-keyword">@finally</span> &#123;<br>            <span class="hljs-keyword">return</span> logString;<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-built_in">NSMutableString</span> *string = [<span class="hljs-built_in">NSMutableString</span> stringWithString:<span class="hljs-string">@&quot;&#123;\n&quot;</span>];<br>    [<span class="hljs-keyword">self</span> enumerateKeysAndObjectsUsingBlock:^(<span class="hljs-type">id</span> key, <span class="hljs-type">id</span> obj, <span class="hljs-type">BOOL</span> *stop) &#123;<br>        [string appendFormat:<span class="hljs-string">@&quot;\t%@ = %@;\n&quot;</span>, key, obj];<br>    &#125;];<br>    [string appendString:<span class="hljs-string">@&quot;&#125;\n&quot;</span>];<br>    <span class="hljs-keyword">return</span> string;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Foundation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 常用宏</title>
    <link href="/2017/05/02/iOS-%E5%B8%B8%E7%94%A8%E5%AE%8F/"/>
    <url>/2017/05/02/iOS-%E5%B8%B8%E7%94%A8%E5%AE%8F/</url>
    
    <content type="html"><![CDATA[<p>自己借鉴或整理的一些常用宏，如果对大家有帮助，希望给个喜欢，如果有发现错误请指正。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> Macros_h</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Macros_h</span><br><br><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark Empty object</span><br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-type">BOOL</span> IsEmptyObject(<span class="hljs-type">id</span> object) &#123;<br>    <span class="hljs-keyword">return</span> object == <span class="hljs-literal">nil</span><br>        || [object isEqual:[<span class="hljs-built_in">NSNull</span> null]]<br>        || ([object respondsToSelector:<span class="hljs-keyword">@selector</span>(length)] &amp;&amp; ([(<span class="hljs-built_in">NSData</span> *)object length] == <span class="hljs-number">0</span> || [(<span class="hljs-built_in">NSString</span> *)object length] == <span class="hljs-number">0</span>))<br>        || ([object respondsToSelector:<span class="hljs-keyword">@selector</span>(count)] &amp;&amp; ([(<span class="hljs-built_in">NSArray</span> *)object count] == <span class="hljs-number">0</span> || [(<span class="hljs-built_in">NSDictionary</span> *)object count] == <span class="hljs-number">0</span>));<br>&#125;<br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-type">BOOL</span> IsValidObject(<span class="hljs-type">id</span> object) &#123;<br>    <span class="hljs-keyword">return</span> !IsEmptyObject(object);<br>&#125;<br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-built_in">NSString</span> *StringFromObject(<span class="hljs-type">id</span> object) &#123;<br><span class="hljs-keyword">if</span> (object == <span class="hljs-literal">nil</span> || [object isEqual:[<span class="hljs-built_in">NSNull</span> null]]) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">@&quot;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ([object isKindOfClass:[<span class="hljs-built_in">NSString</span> <span class="hljs-keyword">class</span>]]) &#123;<br><span class="hljs-keyword">return</span> object;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ([object respondsToSelector:<span class="hljs-keyword">@selector</span>(stringValue)])&#123;<br><span class="hljs-keyword">return</span> [object stringValue];<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> [object description];<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> dispatch_async_in_main_queue(<span class="hljs-type">void</span> (^block)()) &#123;<br>    <span class="hljs-keyword">if</span> (pthread_main_np()) &#123;<br>        block();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">dispatch_async</span>(dispatch_get_main_queue(), block);<br>    &#125;<br>&#125;<br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark iOS Version</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:[NSString stringWithFormat:@<span class="hljs-string">&quot;%f&quot;</span>,v] options:NSNumericSearch] != NSOrderedAscending)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_8   IOS_VERSION_GREATER_THAN_OR_EQUAL_TO(8)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_9   IOS_VERSION_GREATER_THAN_OR_EQUAL_TO(9)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_10  IOS_VERSION_GREATER_THAN_OR_EQUAL_TO(10)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS_11  IOS_VERSION_GREATER_THAN_OR_EQUAL_TO(11)</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark UIColor</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> COLOR_HEXA(hexValue,a)         [UIColor colorWithRed:((hexValue &amp; 0xFF0000) &gt;&gt; 16) / 255.0 \</span><br><span class="hljs-meta">                                                       green:((hexValue &amp; 0xFF00) &gt;&gt; 8) / 255.0    \</span><br><span class="hljs-meta">                                                        blue:(hexValue &amp; 0xFF) / 255.0             \</span><br><span class="hljs-meta">                                                       alpha:a]</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> COLOR_HEX(hexValue)            COLOR_HEXA(hexValue,1.0)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> COLOR_RGBA(r,g,b,a)            [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> COLOR_RGB(r,g,b)               COLOR_RGBA(r,g,b,1.0)</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark Frame Geometry</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> WIDTH(view) view.frame.size.width</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HEIGHT(view) view.frame.size.height</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> X(view) view.frame.origin.x</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Y(view) view.frame.origin.y</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LEFT(view) view.frame.origin.x</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TOP(view) view.frame.origin.y</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BOTTOM(view) (view.frame.origin.y + view.frame.size.height) </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> RIGHT(view) (view.frame.origin.x + view.frame.size.width) </span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark IndexPath</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> INDEX_PATH(a,b) [NSIndexPath indexPathWithIndexes:(NSUInteger[])&#123;a,b&#125; length:2]</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark weakSelf strongSelf</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> WEAKSELF __weak typeof(self) weakSelf = self;</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STRONGSELF __strong __typeof(weakSelf) strongSelf = weakSelf;</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark Device type. </span><br><span class="hljs-comment">// Corresponds to &quot;Targeted device family&quot; in project settings</span><br><span class="hljs-comment">// Universal apps will return true for whichever device they&#x27;re on. </span><br><span class="hljs-comment">// iPhone apps will return true for iPhone even if run on iPad.</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TARGETED_DEVICE_IS_IPAD UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TARGETED_DEVICE_IS_IPHONE UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TARGETED_DEVICE_IS_IPHONE_568 TARGETED_DEVICE_IS_IPHONE &amp;&amp; ScreenHeight == 568</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark Transforms（角度转弧度）</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEGREES_TO_RADIANS(degrees) degrees * M_PI / 180</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - 单例宏</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SINGLETON_INTERFACE(className) + (instancetype)shared##className;</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SINGLETON_IMPLEMENTATION(className) \</span><br><span class="hljs-meta">static id instance; \</span><br><span class="hljs-meta">+ (instancetype)allocWithZone:(struct _NSZone *)zone &#123; \</span><br><span class="hljs-meta">    static dispatch_once_t onceToken; \</span><br><span class="hljs-meta">    dispatch_once(&amp;onceToken, ^&#123; \</span><br><span class="hljs-meta">        instance = [super allocWithZone:zone]; \</span><br><span class="hljs-meta">    &#125;); \</span><br><span class="hljs-meta">    return instance; \</span><br><span class="hljs-meta">&#125; \</span><br><span class="hljs-meta"> \</span><br><span class="hljs-meta">+ (instancetype)shared##className &#123; \</span><br><span class="hljs-meta">    static dispatch_once_t onceToken; \</span><br><span class="hljs-meta">    dispatch_once(&amp;onceToken, ^&#123; \</span><br><span class="hljs-meta">        instance = [[self alloc] init]; \</span><br><span class="hljs-meta">    &#125;); \</span><br><span class="hljs-meta">    return instance; \</span><br><span class="hljs-meta">&#125; \</span><br><span class="hljs-meta"> \</span><br><span class="hljs-meta">- (id)copyWithZone:(NSZone *)zone &#123; \</span><br><span class="hljs-meta">    return instance; \</span><br><span class="hljs-meta">&#125;</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - 提示框（UIAlertController）</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ZDALERT(TITLE, MESSAGE, BUTTONTITLE) \</span><br><span class="hljs-meta">UIAlertController *alertController = [UIAlertController alertControllerWithTitle:TITLE message:MESSAGE preferredStyle:UIAlertControllerStyleAlert]; \</span><br><span class="hljs-meta">[alertController addAction:[UIAlertAction actionWithTitle:BUTTONTITLE style:UIAlertActionStyleDefault handler:nil]]; \</span><br><span class="hljs-meta">[self presentViewController:alertController animated:YES completion:nil];</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - Size</span><br><br><span class="hljs-comment">/** 屏幕尺寸 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SCREEN_BOUNDS ([UIScreen mainScreen].bounds)</span><br><br><span class="hljs-comment">/** 屏幕宽度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)</span><br><br><span class="hljs-comment">/** 屏幕高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)</span><br><br><span class="hljs-comment">/** 判断iPhoneX */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IS_iPhoneX (SCREEN_WIDTH == 375 &amp;&amp; SCREEN_HEIGHT == 812)</span><br><br><span class="hljs-comment">/** 状态栏高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_BAR_HEIGHT (IS_iPhoneX ? 44 : 20)</span><br><br><span class="hljs-comment">/** 导航栏高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NAVIGATION_BAR_HEIGHT 44</span><br><br><span class="hljs-comment">/** 状态栏＋导航栏 高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_AND_NAVIGATION_HEIGHT (STATUS_BAR_HEIGHT + NAVIGATION_BAR_HEIGHT)</span><br><br><span class="hljs-comment">/** 标签栏底部空白高度（iPhoneX下为34）*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TABBAR_SAFEAREA_HEIGHT (IS_iPhoneX ? 34 : 0)</span><br><br><span class="hljs-comment">/** 标签栏高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TABBAR_HEIGHT 49</span><br><br><span class="hljs-comment">/** 工具栏高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TOOLBAR_HEIGHT 49</span><br><br><span class="hljs-comment">/** 一般表视图内容高度 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> CONTENT_HEIGHT (SCREEN_HEIGHT - NAVIGATION_BAR_HEIGHT - STATUS_BAR_HEIGHT - TABBAR_SAFEAREA_HEIGHT)</span><br><br><br><br><span class="hljs-comment">/** 黄金比例值 0.382+0.618=1   0.382/0.618=0.618   0.618/1=0.618 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GOLD_SCALE_LONG(x)  (x * 0.618)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> GOLD_SCALE_SHORT(x) (x * 0.382)</span><br><br><span class="hljs-comment">/** 单条分隔线高度，2x屏为1/2，3x屏为1/3 */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SINGLE_LINE_HEIGHT (1 / [UIScreen mainScreen].scale)</span><br><span class="hljs-comment">// 在非高清屏上，一个Point对应一个像素。为了防止“antialiasing”导致的奇数像素的线渲染时出现失真，你需要设置偏移0.5Point。在高清屏幕上，要绘制一个像素的线，需要设置线宽为0.5个Point，同时设置偏移为0.25 Point。此宏用在设置frame时在x或y轴偏移</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SINGLE_LINE_ADJUST_OFFSET ((1 / [UIScreen mainScreen].scale) / 2)</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark Scale size (base iPhone6s plus iPad宽取plus宽)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SCALE(x) x * (SCREEN_WIDTH &gt; 414 ? 414 : SCREEN_WIDTH) / 414</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - NSLog</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> DEBUG</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NSLog(fmt, ...) NSLog((@<span class="hljs-string">&quot;%s [Line %d] &quot;</span> fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);</span><br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NSLog(fmt, ...)</span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-comment">//使用ARC和不使用ARC</span><br><span class="hljs-meta">#<span class="hljs-keyword">if</span> __has_feature(objc_arc)</span><br><span class="hljs-comment">//compiling with ARC</span><br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-comment">// compiling without ARC</span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - AppDelegate</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ZDAppDelegate (AppDelegate *)[UIApplication sharedApplication].delegate</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ZDKeyWindow [UIApplication sharedApplication].keyWindow</span><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark -</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - TICK、TOCK（代码耗时调试），也可以用YYBenchmark</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TICK NSDate *startTime = [NSDate date];</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TOCK NSLog(@<span class="hljs-string">&quot;tick和tock之间耗时：%lf&quot;</span>, - startTime.timeIntervalSinceNow);</span><br><br><br><br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">/* Macros_h */</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>宏</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>模仿QQ联系人界面的折叠tableView</title>
    <link href="/2016/11/21/%E6%A8%A1%E4%BB%BFQQ%E8%81%94%E7%B3%BB%E4%BA%BA%E7%95%8C%E9%9D%A2%E7%9A%84%E6%8A%98%E5%8F%A0tableView/"/>
    <url>/2016/11/21/%E6%A8%A1%E4%BB%BFQQ%E8%81%94%E7%B3%BB%E4%BA%BA%E7%95%8C%E9%9D%A2%E7%9A%84%E6%8A%98%E5%8F%A0tableView/</url>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="http://upload-images.jianshu.io/upload_images/1208206-d513468b93710ac0.gif?imageMogr2/auto-orient/strip" alt="screenshot.gif"></p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>每个分组是一个UITableViewHeaderFooterView</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@class</span> <span class="hljs-title">FoldedTableViewHeaderFooterViewModel</span>;</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">void</span>(^DidSelectBlock)(<span class="hljs-type">BOOL</span> isExpanded);<br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">FoldedTableViewHeaderFooterView</span> : <span class="hljs-title">UITableViewHeaderFooterView</span></span><br><br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">UIImageView</span> *arrowImageView;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">UILabel</span> *titleLabel;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">UILabel</span> *numberLabel;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">UIView</span> *topLineView;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">UIView</span> *bottomLineView;<br><br>- (<span class="hljs-type">void</span>)setupWithModel:(FoldedTableViewHeaderFooterViewModel *)model<br>               section:(<span class="hljs-built_in">NSInteger</span>)section<br>        didSelectBlock:(DidSelectBlock)block;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><p>每个分组有一个数据层viewModel</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@class</span> FoldedTableViewCellModel;<br><br><span class="hljs-variable">@interface</span> <span class="hljs-attribute">FoldedTableViewHeaderFooterViewModel </span>: NSObject<br><br><span class="hljs-variable">@property</span> (nonatomic, assign, getter=isExpanded) BOOL expanded;<span class="hljs-comment">///&lt; 是否展开</span><br><span class="hljs-variable">@property</span> (nonatomic, copy) NSString *title;<br><span class="hljs-variable">@property</span> (nonatomic, copy) NSString *number;<br><span class="hljs-variable">@property</span> (nonatomic, strong) NSArray&lt;FoldedTableViewCellModel *&gt; *cellModelArray;<br><br><span class="hljs-variable">@end</span><br></code></pre></td></tr></table></figure><p>expanded判断分组是否展开，cellModelArray存储当前分组的联系人数据</p><p>每个联系人是一个UITableViewCell</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@class</span> <span class="hljs-title">FoldedTableViewCellModel</span>;</span><br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">FoldedTableViewCell</span> : <span class="hljs-title">UITableViewCell</span></span><br><br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">weak</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-keyword">IBOutlet</span> <span class="hljs-built_in">UIImageView</span> *leftImageView;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">weak</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-keyword">IBOutlet</span> <span class="hljs-built_in">UILabel</span> *titleLabel;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">weak</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-keyword">IBOutlet</span> <span class="hljs-built_in">UILabel</span> *contentLabel;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">weak</span>, <span class="hljs-keyword">nonatomic</span>) <span class="hljs-keyword">IBOutlet</span> <span class="hljs-built_in">UIView</span> *bottomLineView;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">CALayer</span> *imageViewMaskLayer;<span class="hljs-comment">///&lt; 离线头像蒙版</span><br><br>- (<span class="hljs-type">void</span>)setupWithModel:(FoldedTableViewCellModel *)model;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><p>每个联系人有一个数据层cellModel</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@interface</span> <span class="hljs-attribute">FoldedTableViewCellModel </span>: NSObject<br><br><span class="hljs-variable">@property</span> (nonatomic, copy) NSString *imageName;<br><span class="hljs-variable">@property</span> (nonatomic, copy) NSString *title;<br><span class="hljs-variable">@property</span> (nonatomic, copy) NSString *content;<br><span class="hljs-variable">@property</span> (nonatomic, assign, getter=isOnline) BOOL online;<span class="hljs-comment">///&lt; 是否在线</span><br><br><span class="hljs-variable">@end</span><br></code></pre></td></tr></table></figure><p>然后在tableView的方法里面简单的设置</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">- (<span class="hljs-built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="hljs-built_in">UITableView</span> *)tableView &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>.sectionData.count;<br>&#125;<br><br>- (<span class="hljs-built_in">NSInteger</span>)tableView:(<span class="hljs-built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="hljs-built_in">NSInteger</span>)section &#123;<br>    FoldedTableViewHeaderFooterViewModel *model = <span class="hljs-keyword">self</span>.sectionData[section];<br>    <span class="hljs-keyword">return</span> model.isExpanded ? model.cellModelArray.count : <span class="hljs-number">0</span>;<br>&#125;<br><br>- (<span class="hljs-built_in">UITableViewCell</span> *)tableView:(<span class="hljs-built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="hljs-built_in">NSIndexPath</span> *)indexPath &#123;<br>    FoldedTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:<span class="hljs-string">@&quot;FoldedTableViewCell&quot;</span> forIndexPath:indexPath];<br>    FoldedTableViewHeaderFooterViewModel *viewModel = <span class="hljs-keyword">self</span>.sectionData[indexPath.section];<br>    FoldedTableViewCellModel *cellModel = viewModel.cellModelArray[indexPath.row];<br>    [cell setupWithModel:cellModel];<br>    <span class="hljs-keyword">if</span> (indexPath.row == viewModel.cellModelArray.count - <span class="hljs-number">1</span>) &#123;<br>        cell.bottomLineView.hidden = <span class="hljs-literal">YES</span>;<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        cell.bottomLineView.hidden = <span class="hljs-literal">NO</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> cell;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p><a href="https://github.com/guanzhendong/FoldedTableView">https://github.com/guanzhendong/FoldedTableView</a></p>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>自定义全屏右滑返回手势</title>
    <link href="/2016/11/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%8F%E5%8F%B3%E6%BB%91%E8%BF%94%E5%9B%9E%E6%89%8B%E5%8A%BF/"/>
    <url>/2016/11/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%8F%E5%8F%B3%E6%BB%91%E8%BF%94%E5%9B%9E%E6%89%8B%E5%8A%BF/</url>
    
    <content type="html"><![CDATA[<p>系统自带的右滑返回只有从边缘才有效，而我们希望从屏幕任何地方都可以右滑返回。</p><p>在基类导航控制器BaseNavigationController里面做处理</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-comment">// 获取系统自带滑动手势的target对象</span><br>    <span class="hljs-type">id</span> target = <span class="hljs-keyword">self</span>.interactivePopGestureRecognizer.delegate;<br>    <br>    <span class="hljs-comment">// 创建全屏滑动手势，调用系统自带滑动手势的target的action方法</span><br>    <span class="hljs-built_in">UIPanGestureRecognizer</span> *pan = [[<span class="hljs-built_in">UIPanGestureRecognizer</span> alloc] initWithTarget:target action:<span class="hljs-keyword">@selector</span>(handleNavigationTransition:)];<br>    <br>    <span class="hljs-comment">// 设置手势代理，拦截手势触发</span><br>    pan.delegate = <span class="hljs-keyword">self</span>;<br>    <br>    <span class="hljs-comment">// 给导航控制器的view添加全屏滑动手势</span><br>    [<span class="hljs-keyword">self</span>.view addGestureRecognizer:pan];<br>    <br>    <span class="hljs-comment">// 禁止使用系统自带的滑动手势</span><br>    <span class="hljs-keyword">self</span>.interactivePopGestureRecognizer.enabled = <span class="hljs-literal">NO</span>;<br></code></pre></td></tr></table></figure><p>效果图</p><p><img src="http://upload-images.jianshu.io/upload_images/1208206-e40666eff0899ddf.gif?imageMogr2/auto-orient/strip" alt="screenshot.gif"></p><p>Demo：<br><a href="https://github.com/guanzhendong/ScreenEdgePanGestureDemo">https://github.com/guanzhendong/ScreenEdgePanGestureDemo</a></p>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 优雅的命名</title>
    <link href="/2016/07/07/iOS-%E4%BC%98%E9%9B%85%E7%9A%84%E5%91%BD%E5%90%8D/"/>
    <url>/2016/07/07/iOS-%E4%BC%98%E9%9B%85%E7%9A%84%E5%91%BD%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="减少缩写"><a href="#减少缩写" class="headerlink" title="减少缩写"></a>减少缩写</h2><p>命名缩写只用于通用专业术语，如 URL，不可自创命名缩写，如 Ctr、Msg。命名宁可长一些，也不要难于理解。</p><p>是否在看别人代码时各种缩写而不知其所以然？简短的名字确实比较好，但不可滥用缩写导致失去可读性。</p><h2 id="过程化"><a href="#过程化" class="headerlink" title="过程化"></a>过程化</h2><p>动作发生之前用 Will，发生之后用 Did，询问是否发生用 Should。</p><p>每个处理都是有一定过程的，这个处理往往会产生一些通知和回调，好的命名必须要明确当前过程中的步骤。命名这些通知和回调时最好提供发生前后两个版本，如果发生前要回调确认，请用 Should 命名该回调，并返回一个 BOOL 值。</p><h2 id="名字空间"><a href="#名字空间" class="headerlink" title="名字空间"></a>名字空间</h2><p>各种全局作用范围的函数，常量，类，枚举，结构等命名必须加命名前缀。</p><p>Objective-C中没有C++那样的名字空间概念，也没有Java包名的概念，随着工程代码的增加，难免会出现名字冲突，因此全局作用范围的名字必须唯一。比较经典的做法就是加命名前缀。大多数人认为命名前缀只是在类的前面加几个大写字母，其实不仅仅如此。</p><p>•类型(类、枚举、结构)命名前要加相关模块前缀。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-built_in">UIView</span> <br><span class="hljs-built_in">NSString</span> <br><span class="hljs-built_in">CGRect</span> <br></code></pre></td></tr></table></figure><p> •常量命名要加相关类型名前缀。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-built_in">UIApplicationDidFinishLaunchingNotification</span> <br><span class="hljs-built_in">CGRectZero</span> <br></code></pre></td></tr></table></figure><p> •函数命名要加相关类型名前缀。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-built_in">CGRectMake</span> <br><span class="hljs-built_in">CGPointMake</span> <br></code></pre></td></tr></table></figure><p> •枚举类型命名要加相关类名前缀，并且枚举值命名要加枚举类型前缀。</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs elm">typedef <span class="hljs-type">NS_ENUM</span>(<span class="hljs-type">NSInteger</span>, <span class="hljs-type">UIViewAnimationTransition</span>) &#123; <br>    <span class="hljs-type">UIViewAnimationTransitionNone</span>, <br>    <span class="hljs-type">UIViewAnimationTransitionFlipFromLeft</span>, <br>    <span class="hljs-type">UIViewAnimationTransitionFlipFromRight</span>, <br>    <span class="hljs-type">UIViewAnimationTransitionCurlUp</span>, <br>    <span class="hljs-type">UIViewAnimationTransitionCurlDown</span>, <br>&#125;; <br></code></pre></td></tr></table></figure><p>做到以上几点几乎可以做到名字不会冲突。</p><h2 id="参数提示"><a href="#参数提示" class="headerlink" title="参数提示"></a>参数提示</h2><p>方法命名时，每个参数前要加参数的名称提示。</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang">- <span class="hljs-params">(id)</span>initWithNibName:<span class="hljs-params">(NSString *)</span>nibNameOrNil bundle:<span class="hljs-params">(NSBundle *)</span>nibBundleOrNil <br>- <span class="hljs-params">(void)</span>performSegueWithIdentifier:<span class="hljs-params">(NSString *)</span>identifier sender:<span class="hljs-params">(id)</span>sender <br></code></pre></td></tr></table></figure><h2 id="对象命名"><a href="#对象命名" class="headerlink" title="对象命名"></a>对象命名</h2><p>给一个带修饰的对象命名时要采用修饰+类型的方式，而不是先指定其类型。</p><p>很多人喜欢把对象的类型放在对象的命名前面，从而来标识一个对象是什么类型，这很不符合Objective-C语言的特点，容易引起歧义，比如一个 UILabel 对象：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">titleLabel      <span class="hljs-regexp">//</span>表示标题的label，是UIlabel对象 <br>labelTitle      <span class="hljs-regexp">//</span>label的标题？似乎是一个NSString？ <br> <br>confirmButton   <span class="hljs-regexp">//</span>确认按钮 <br>buttonConfirm   <span class="hljs-regexp">//</span>不自然的命名，看上去像是按钮点击动作。 <br></code></pre></td></tr></table></figure><h2 id="方法命名符合语法"><a href="#方法命名符合语法" class="headerlink" title="方法命名符合语法"></a>方法命名符合语法</h2><p>大部分方法可以分成下面两类，而这两类往往被乱用。它们是：<br>•要什么<br>•做什么</p><p>“要什么”表示取得某个对象，要以名词作为方法的开头；“做什么”表示执行某种操作，要以动词作为方法开头。看看下面这个命名方式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">- (XXItem *)itemNamed:(NSString *)name           <span class="hljs-regexp">//</span>Good. 意思清晰 <br>- (XXItem *)findItemWithName:(NSString *)name    <span class="hljs-regexp">//</span>更像是一种操作，而不是返回一个对象。 <br></code></pre></td></tr></table></figure><p>findItemWithName 这个命名表示一种操作，而无需返回对象，比如它可以用于设置类的内部成员，比如：</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lasso">- (<span class="hljs-literal">void</span>)findItemWithName:(NSString *)name&#123; <br>    <span class="hljs-params">...</span> <br>    <span class="hljs-built_in">self</span>.foundItem = xxx; <br>    <span class="hljs-params">...</span> <br>&#125; <br></code></pre></td></tr></table></figure><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><p>“要什么”往往被胡乱命名为get开头的方法。首先get是一个动词，所以它还是“做什么”或者说“做的是要什么”。那么get方法不要用于返回对象，但它可用于参数中返回。</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs axapta">- (XXItem *)getItemAtIndex:(NSUInteger)<span class="hljs-keyword">index</span>                  <span class="hljs-comment">//Bad!! 不规范的命名 </span><br>- (XXItem *)itemAtIndex:(NSUInteger)<span class="hljs-keyword">index</span>                     <span class="hljs-comment">//Good, 命名清晰 </span><br>- (<span class="hljs-keyword">void</span>)getItem:(XXItem **)outItem atIndex:(NSUInteger)<span class="hljs-keyword">index</span>  <span class="hljs-comment">//比较符合规范，但第二种更好。 </span><br></code></pre></td></tr></table></figure><h2 id="可知性"><a href="#可知性" class="headerlink" title="可知性"></a>可知性</h2><p>回调时被调用者要知道其调用者</p><p>可以在回调方法中第一个参数中加上调用者：</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang">- <span class="hljs-params">(BOOL)</span>application:<span class="hljs-params">(UIApplication *)</span>application willFinishLaunchingWithOptions:<span class="hljs-params">(NSDictionary *)</span>launchOptions <br>- <span class="hljs-params">(void)</span>buttonTapped:<span class="hljs-params">(UIButton*)</span>sender <br></code></pre></td></tr></table></figure><h2 id="常量还是宏"><a href="#常量还是宏" class="headerlink" title="常量还是宏"></a>常量还是宏</h2><p>全局常量不可使用宏定义<br>我们经常看到一些用宏定义的通知，关键字等。其实这么做是非常危险的，因为宏很可能被重定义，而且引用不同的文件可能会导致宏的不同，所以尽量使用const来定义常量。</p>]]></content>
    
    
    <categories>
      
      <category>编码规范</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 类似QQ的popMenu</title>
    <link href="/2016/07/01/iOS-%E7%B1%BB%E4%BC%BCQQ%E7%9A%84popMenu/"/>
    <url>/2016/07/01/iOS-%E7%B1%BB%E4%BC%BCQQ%E7%9A%84popMenu/</url>
    
    <content type="html"><![CDATA[<h1 id="h"><a href="#h" class="headerlink" title=".h"></a>.h</h1><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">QQPopMenuView</span> : <span class="hljs-title">UIView</span></span><br><br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">copy</span>) <span class="hljs-type">void</span> (^hideHandle)();<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  实例化方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *  @param array  items，包含字典，字典里面包含标题（title）、图片名（imageName）</span><br><span class="hljs-comment"> *  @param width  宽度</span><br><span class="hljs-comment"> *  @param point  三角的顶角坐标（基于window）</span><br><span class="hljs-comment"> *  @param action 点击回调</span><br><span class="hljs-comment"> */</span><br>- (<span class="hljs-keyword">instancetype</span>)initWithItems:(<span class="hljs-built_in">NSArray</span> &lt;<span class="hljs-built_in">NSDictionary</span> *&gt;*)array<br>                        width:(<span class="hljs-built_in">CGFloat</span>)width<br>             triangleLocation:(<span class="hljs-built_in">CGPoint</span>)point<br>                       action:(<span class="hljs-type">void</span>(^)(<span class="hljs-built_in">NSInteger</span> index))action;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  类方法展示</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *  @param array  items，包含字典，字典里面包含标题（title）、图片名（imageName）</span><br><span class="hljs-comment"> *  @param width  宽度</span><br><span class="hljs-comment"> *  @param point  三角的顶角坐标（基于window）</span><br><span class="hljs-comment"> *  @param action 点击回调</span><br><span class="hljs-comment"> */</span><br>+ (<span class="hljs-type">void</span>)showWithItems:(<span class="hljs-built_in">NSArray</span> &lt;<span class="hljs-built_in">NSDictionary</span> *&gt;*)array<br>                width:(<span class="hljs-built_in">CGFloat</span>)width<br>     triangleLocation:(<span class="hljs-built_in">CGPoint</span>)point<br>               action:(<span class="hljs-type">void</span>(^)(<span class="hljs-built_in">NSInteger</span> index))action;<br><br>- (<span class="hljs-type">void</span>)show;<br>- (<span class="hljs-type">void</span>)hide;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><h1 id="m"><a href="#m" class="headerlink" title=".m"></a>.m</h1><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#import <span class="hljs-string">&quot;QQPopMenuView.h&quot;</span></span><br><span class="hljs-meta">#import <span class="hljs-string">&quot;PopMenuTableViewCell.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width</span><br><br><span class="hljs-keyword">static</span> <span class="hljs-built_in">CGFloat</span> <span class="hljs-keyword">const</span> kCellHeight = <span class="hljs-number">44</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">@interface</span> <span class="hljs-title">QQPopMenuView</span> ()&lt;<span class="hljs-title">UITableViewDelegate</span>,<span class="hljs-title">UITableViewDataSource</span>,<span class="hljs-title">UIGestureRecognizerDelegate</span>&gt;</span><br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">UITableView</span> *tableView;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">strong</span>) <span class="hljs-built_in">NSArray</span> *tableData;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">assign</span>) <span class="hljs-built_in">CGPoint</span> trianglePoint;<br><span class="hljs-keyword">@property</span> (<span class="hljs-keyword">nonatomic</span>, <span class="hljs-keyword">copy</span>) <span class="hljs-type">void</span>(^action)(<span class="hljs-built_in">NSInteger</span> index);<br><span class="hljs-keyword">@end</span><br><br><span class="hljs-class"><span class="hljs-keyword">@implementation</span> <span class="hljs-title">QQPopMenuView</span></span><br><br>- (<span class="hljs-keyword">instancetype</span>)initWithItems:(<span class="hljs-built_in">NSArray</span> &lt;<span class="hljs-built_in">NSDictionary</span> *&gt;*)array<br>                        width:(<span class="hljs-built_in">CGFloat</span>)width<br>             triangleLocation:(<span class="hljs-built_in">CGPoint</span>)point<br>                       action:(<span class="hljs-type">void</span>(^)(<span class="hljs-built_in">NSInteger</span> index))action<br>&#123;<br>    <span class="hljs-keyword">if</span> (array.count == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">self</span> = [<span class="hljs-variable language_">super</span> init]) &#123;<br>        <span class="hljs-keyword">self</span>.frame = [<span class="hljs-built_in">UIScreen</span> mainScreen].bounds;<br>        <span class="hljs-keyword">self</span>.backgroundColor = [<span class="hljs-built_in">UIColor</span> colorWithWhite:<span class="hljs-number">0</span> alpha:<span class="hljs-number">0.2</span>];<br>        <span class="hljs-keyword">self</span>.alpha = <span class="hljs-number">0</span>;<br>        _tableData = [array <span class="hljs-keyword">copy</span>];<br>        _trianglePoint = point;<br>        <span class="hljs-keyword">self</span>.action = action;<br>        <br>        <br>        <span class="hljs-comment">// 添加手势</span><br>        <span class="hljs-built_in">UITapGestureRecognizer</span> *tap = [[<span class="hljs-built_in">UITapGestureRecognizer</span> alloc] initWithTarget:<span class="hljs-keyword">self</span> action:<span class="hljs-keyword">@selector</span>(tap)];<br>        tap.delegate = <span class="hljs-keyword">self</span>;<br>        [<span class="hljs-keyword">self</span> addGestureRecognizer:tap];<br>        <br>        <br>        <span class="hljs-comment">// 创建tableView</span><br>        _tableView = [[<span class="hljs-built_in">UITableView</span> alloc] initWithFrame:<span class="hljs-built_in">CGRectMake</span>(SCREEN_WIDTH - width - <span class="hljs-number">5</span>, point.y + <span class="hljs-number">10</span>, width, kCellHeight * array.count) style:<span class="hljs-built_in">UITableViewStylePlain</span>];<br>        _tableView.delegate = <span class="hljs-keyword">self</span>;<br>        _tableView.dataSource = <span class="hljs-keyword">self</span>;<br>        _tableView.layer.masksToBounds = <span class="hljs-literal">YES</span>;<br>        _tableView.layer.cornerRadius = <span class="hljs-number">5</span>;<br>        _tableView.scrollEnabled = <span class="hljs-literal">NO</span>;<br>        _tableView.rowHeight = kCellHeight;<br>        [_tableView registerNib:[<span class="hljs-built_in">UINib</span> nibWithNibName:<span class="hljs-string">@&quot;PopMenuTableViewCell&quot;</span> bundle:<span class="hljs-literal">nil</span>] forCellReuseIdentifier:<span class="hljs-string">@&quot;PopMenuTableViewCell&quot;</span>];<br>        [<span class="hljs-keyword">self</span> addSubview:_tableView];<br>    <br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>;<br>&#125;<br><br>+ (<span class="hljs-type">void</span>)showWithItems:(<span class="hljs-built_in">NSArray</span> &lt;<span class="hljs-built_in">NSDictionary</span> *&gt;*)array<br>                width:(<span class="hljs-built_in">CGFloat</span>)width<br>     triangleLocation:(<span class="hljs-built_in">CGPoint</span>)point<br>               action:(<span class="hljs-type">void</span>(^)(<span class="hljs-built_in">NSInteger</span> index))action<br>&#123;<br>    QQPopMenuView *view = [[QQPopMenuView alloc] initWithItems:array width:width triangleLocation:point action:action];<br>    [view show];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)tap &#123;<br>    [<span class="hljs-keyword">self</span> hide];<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - UIGestureRecognizerDelegate</span><br>- (<span class="hljs-type">BOOL</span>)gestureRecognizer:(<span class="hljs-built_in">UIGestureRecognizer</span> *)gestureRecognizer shouldReceiveTouch:(<span class="hljs-built_in">UITouch</span> *)touch &#123;<br>    <span class="hljs-keyword">if</span> ([touch.view isKindOfClass:<span class="hljs-built_in">NSClassFromString</span>(<span class="hljs-string">@&quot;UITableViewCellContentView&quot;</span>)]) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NO</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">YES</span>;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - Show or Hide</span><br>- (<span class="hljs-type">void</span>)show &#123;<br>    [[<span class="hljs-built_in">UIApplication</span> sharedApplication].keyWindow addSubview:<span class="hljs-keyword">self</span>];<br>    <span class="hljs-comment">// 设置右上角为transform的起点（默认是中心点）</span><br>    _tableView.layer.position = <span class="hljs-built_in">CGPointMake</span>(SCREEN_WIDTH - <span class="hljs-number">5</span>, _trianglePoint.y + <span class="hljs-number">10</span>);<br>    <span class="hljs-comment">// 向右下transform</span><br>    _tableView.layer.anchorPoint = <span class="hljs-built_in">CGPointMake</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>    _tableView.transform = <span class="hljs-built_in">CGAffineTransformMakeScale</span>(<span class="hljs-number">0.0001</span>, <span class="hljs-number">0.0001</span>);<br>    [<span class="hljs-built_in">UIView</span> animateWithDuration:<span class="hljs-number">0.2</span> animations:^&#123;<br>        <span class="hljs-keyword">self</span>.alpha = <span class="hljs-number">1</span>;<br>        _tableView.transform = <span class="hljs-built_in">CGAffineTransformMakeScale</span>(<span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>);<br>    &#125;];<br>&#125;<br><br>- (<span class="hljs-type">void</span>)hide &#123;<br>    [<span class="hljs-built_in">UIView</span> animateWithDuration:<span class="hljs-number">0.2</span> animations:^&#123;<br>        <span class="hljs-keyword">self</span>.alpha = <span class="hljs-number">0</span>;<br>        _tableView.transform = <span class="hljs-built_in">CGAffineTransformMakeScale</span>(<span class="hljs-number">0.0001</span>, <span class="hljs-number">0.0001</span>);<br>    &#125; completion:^(<span class="hljs-type">BOOL</span> finished) &#123;<br>        [_tableView removeFromSuperview];<br>        [<span class="hljs-keyword">self</span> removeFromSuperview];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">self</span>.hideHandle) &#123;<br>            <span class="hljs-keyword">self</span>.hideHandle();<br>        &#125;<br>    &#125;];<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - Draw triangle</span><br>- (<span class="hljs-type">void</span>)drawRect:(<span class="hljs-built_in">CGRect</span>)rect &#123;<br>    <span class="hljs-comment">// 设置背景色</span><br>    [[<span class="hljs-built_in">UIColor</span> whiteColor] set];<br>    <span class="hljs-comment">//拿到当前视图准备好的画板</span><br>    <span class="hljs-built_in">CGContextRef</span> context = <span class="hljs-built_in">UIGraphicsGetCurrentContext</span>();<br>    <span class="hljs-comment">//利用path进行绘制三角形</span><br>    <span class="hljs-built_in">CGContextBeginPath</span>(context);<br>    <span class="hljs-built_in">CGPoint</span> point = _trianglePoint;<br>    <span class="hljs-comment">// 设置起点</span><br>    <span class="hljs-built_in">CGContextMoveToPoint</span>(context, point.x, point.y);<br>    <span class="hljs-comment">// 画线</span><br>    <span class="hljs-built_in">CGContextAddLineToPoint</span>(context, point.x - <span class="hljs-number">10</span>, point.y + <span class="hljs-number">10</span>);<br>    <span class="hljs-built_in">CGContextAddLineToPoint</span>(context, point.x + <span class="hljs-number">10</span>, point.y + <span class="hljs-number">10</span>);<br>    <span class="hljs-built_in">CGContextClosePath</span>(context);<br>    <span class="hljs-comment">// 设置填充色</span><br>    [[<span class="hljs-built_in">UIColor</span> whiteColor] setFill];<br>    <span class="hljs-comment">// 设置边框颜色</span><br>    [[<span class="hljs-built_in">UIColor</span> whiteColor] setStroke];<br>    <span class="hljs-comment">// 绘制路径</span><br>    <span class="hljs-built_in">CGContextDrawPath</span>(context, kCGPathFillStroke);<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - UITableViewDataSource</span><br>- (<span class="hljs-built_in">NSInteger</span>)tableView:(<span class="hljs-built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="hljs-built_in">NSInteger</span>)section &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span>.tableData.count;<br>&#125;<br><br>- (<span class="hljs-built_in">UITableViewCell</span> *)tableView:(<span class="hljs-built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="hljs-built_in">NSIndexPath</span> *)indexPath &#123;<br>    PopMenuTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:<span class="hljs-string">@&quot;PopMenuTableViewCell&quot;</span> forIndexPath:indexPath];<br>    <span class="hljs-built_in">NSDictionary</span> *dic = _tableData[indexPath.row];<br>    cell.leftImageView.image = [<span class="hljs-built_in">UIImage</span> imageNamed:dic[<span class="hljs-string">@&quot;imageName&quot;</span>]];<br>    cell.titleLabel.text = dic[<span class="hljs-string">@&quot;title&quot;</span>];<br>    cell.selectionStyle = <span class="hljs-built_in">UITableViewCellSelectionStyleNone</span>;<br>    cell.layoutMargins = <span class="hljs-built_in">UIEdgeInsetsZero</span>;<br>    cell.separatorInset = <span class="hljs-built_in">UIEdgeInsetsZero</span>;<br>    <span class="hljs-keyword">return</span> cell;<br>&#125;<br><br>- (<span class="hljs-type">void</span>)tableView:(<span class="hljs-built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="hljs-built_in">NSIndexPath</span> *)indexPath &#123;<br>    [<span class="hljs-keyword">self</span> hide];<br>    <span class="hljs-keyword">if</span> (_action) &#123;<br>        _action(indexPath.row);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">@end</span><br></code></pre></td></tr></table></figure><h1 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h1><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[<span class="hljs-name">QQPopMenuView</span> showWithItems:@[<span class="hljs-name">@</span>&#123;@<span class="hljs-string">&quot;title&quot;</span>:@<span class="hljs-string">&quot;发起讨论&quot;</span>,@<span class="hljs-string">&quot;imageName&quot;</span>:@<span class="hljs-string">&quot;popMenu_createChat&quot;</span>&#125;,<br>                                   @&#123;@<span class="hljs-string">&quot;title&quot;</span>:@<span class="hljs-string">&quot;扫描名片&quot;</span>,@<span class="hljs-string">&quot;imageName&quot;</span>:@<span class="hljs-string">&quot;popMenu_scanCard&quot;</span>&#125;,<br>                                   @&#123;@<span class="hljs-string">&quot;title&quot;</span>:@<span class="hljs-string">&quot;写日报&quot;</span>,@<span class="hljs-string">&quot;imageName&quot;</span>:@<span class="hljs-string">&quot;popMenu_writeReport&quot;</span>&#125;,<br>                                   @&#123;@<span class="hljs-string">&quot;title&quot;</span>:@<span class="hljs-string">&quot;外勤签到&quot;</span>,@<span class="hljs-string">&quot;imageName&quot;</span>:@<span class="hljs-string">&quot;popMenu_signIn&quot;</span>&#125;]<br>                           width:130<br>                triangleLocation:CGPointMake([<span class="hljs-name">UIScreen</span> mainScreen].bounds.size.width-30, <span class="hljs-number">64</span><span class="hljs-number">+5</span>)<br>                          action:^(<span class="hljs-name">NSInteger</span> index) &#123;<br>                              NSLog(<span class="hljs-name">@</span><span class="hljs-string">&quot;点击了第%ld行&quot;</span>,index)<span class="hljs-comment">;</span><br>    &#125;]<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="http://upload-images.jianshu.io/upload_images/1208206-55c9abdf75f9b0e7.gif?imageMogr2/auto-orient/strip" alt="screenshot.gif"></p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p><a href="https://github.com/guanzhendong/QQPopMenuView">https://github.com/guanzhendong/QQPopMenuView</a></p>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS UI 快捷创建封装</title>
    <link href="/2016/06/30/iOS-UI-%E5%BF%AB%E6%8D%B7%E5%88%9B%E5%BB%BA%E5%B0%81%E8%A3%85/"/>
    <url>/2016/06/30/iOS-UI-%E5%BF%AB%E6%8D%B7%E5%88%9B%E5%BB%BA%E5%B0%81%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>封装了UIView、UILabel、UIButton、UIImageView的快速创建方法，让我们不用每次都进行繁杂的UI代码的编写。引用了 UIGestureRecognizer (YYAdd)。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - For UIView</span><br>+ (<span class="hljs-built_in">UIView</span> *)createUIViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>&#123;<br>    <span class="hljs-built_in">UIView</span> *view = [[<span class="hljs-built_in">UIView</span> alloc] initWithFrame:frame];<br>    view.backgroundColor = bgColor;<br>    <span class="hljs-keyword">return</span> view;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIView</span> *)createUIViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                     cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>&#123;<br>    <span class="hljs-built_in">UIView</span> *view = [<span class="hljs-keyword">self</span> createUIViewWithFrame:frame bgColor:bgColor];<br>    <span class="hljs-keyword">if</span> (cornerRadius &gt; <span class="hljs-number">0</span>) &#123;<br>        view.clipsToBounds = <span class="hljs-literal">YES</span>;<br>        view.layer.cornerRadius = cornerRadius;<br>    &#125;<br>    <span class="hljs-keyword">return</span> view;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIView</span> *)createUIViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                     cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>                    actionGesture:(<span class="hljs-built_in">UIGestureRecognizer</span> *)gesture<br>&#123;<br>    <span class="hljs-built_in">UIView</span> *view = [<span class="hljs-keyword">self</span> createUIViewWithFrame:frame bgColor:bgColor cornerRadius:cornerRadius];<br>    [view addGestureRecognizer:gesture];<br>    <span class="hljs-keyword">return</span> view;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIView</span> *)createUIViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                     cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>                        tapAction:(<span class="hljs-type">void</span>(^)())tapAction<br>&#123;<br>    <span class="hljs-built_in">UITapGestureRecognizer</span> *tap = [[<span class="hljs-built_in">UITapGestureRecognizer</span> alloc] initWithActionBlock:^(<span class="hljs-type">id</span> sender) &#123;<br>        <span class="hljs-keyword">if</span> (tapAction) &#123;<br>            tapAction();<br>        &#125;<br>    &#125;];<br>    <span class="hljs-built_in">UIView</span> *view = [<span class="hljs-keyword">self</span> createUIViewWithFrame:frame bgColor:bgColor cornerRadius:cornerRadius actionGesture:tap];<br>    <span class="hljs-keyword">return</span> view;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - For UILabel</span><br>+ (<span class="hljs-built_in">UILabel</span> *)createLabelWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                             text:(<span class="hljs-built_in">NSString</span> *)text<br>                    textAlignment:(<span class="hljs-built_in">NSTextAlignment</span>)textAlignment<br>                         fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>&#123;<br>    <span class="hljs-built_in">UILabel</span> *label = [[<span class="hljs-built_in">UILabel</span> alloc] initWithFrame:frame];<br>    label.text = text;<br>    <span class="hljs-keyword">if</span> (textAlignment) &#123;<br>        label.textAlignment = textAlignment;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (fontSize &gt; <span class="hljs-number">0</span>) &#123;<br>        label.font = [<span class="hljs-built_in">UIFont</span> systemFontOfSize:fontSize];<br>    &#125;<br>    <span class="hljs-keyword">return</span> label;<br>&#125;<br><br>+ (<span class="hljs-built_in">UILabel</span> *)createLabelWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                             text:(<span class="hljs-built_in">NSString</span> *)text<br>                    textAlignment:(<span class="hljs-built_in">NSTextAlignment</span>)textAlignment<br>                         fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                        textColor:(<span class="hljs-built_in">UIColor</span> *)textColor<br>&#123;<br>    <span class="hljs-built_in">UILabel</span> *label = [<span class="hljs-keyword">self</span> createLabelWithFrame:frame text:text textAlignment:textAlignment fontSize:fontSize];<br>    label.textColor = textColor;<br>    <span class="hljs-keyword">return</span> label;<br>&#125;<br><br>+ (<span class="hljs-built_in">UILabel</span> *)createLabelWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                             text:(<span class="hljs-built_in">NSString</span> *)text<br>                    textAlignment:(<span class="hljs-built_in">NSTextAlignment</span>)textAlignment<br>                         fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                        textColor:(<span class="hljs-built_in">UIColor</span> *)textColor<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>&#123;<br>    <span class="hljs-built_in">UILabel</span> *label = [<span class="hljs-keyword">self</span> createLabelWithFrame:frame text:text textAlignment:textAlignment fontSize:fontSize textColor:textColor];<br>    label.backgroundColor = bgColor;<br>    <span class="hljs-keyword">return</span> label;<br>&#125;<br><br>+ (<span class="hljs-built_in">UILabel</span> *)createLabelWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                             text:(<span class="hljs-built_in">NSString</span> *)text<br>                    textAlignment:(<span class="hljs-built_in">NSTextAlignment</span>)textAlignment<br>                         fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                        textColor:(<span class="hljs-built_in">UIColor</span> *)textColor<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                     cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>&#123;<br>    <span class="hljs-built_in">UILabel</span> *label = [<span class="hljs-keyword">self</span> createLabelWithFrame:frame text:text textAlignment:textAlignment fontSize:fontSize textColor:textColor bgColor:bgColor];<br>    <span class="hljs-keyword">if</span> (cornerRadius &gt; <span class="hljs-number">0</span>) &#123;<br>        label.clipsToBounds = <span class="hljs-literal">YES</span>;<br>        label.layer.cornerRadius = cornerRadius;<br>    &#125;<br>    <span class="hljs-keyword">return</span> label;<br>&#125;<br><br>+ (<span class="hljs-built_in">UILabel</span> *)createLabelWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                             text:(<span class="hljs-built_in">NSString</span> *)text<br>                    textAlignment:(<span class="hljs-built_in">NSTextAlignment</span>)textAlignment<br>                         fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                        textColor:(<span class="hljs-built_in">UIColor</span> *)textColor<br>                          bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                     cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>                        tapAction:(<span class="hljs-type">void</span>(^)())tapAction<br>&#123;<br>    <span class="hljs-built_in">UILabel</span> *label = [<span class="hljs-keyword">self</span> createLabelWithFrame:frame text:text textAlignment:textAlignment fontSize:fontSize textColor:textColor bgColor:bgColor cornerRadius:cornerRadius];<br>    <span class="hljs-built_in">UITapGestureRecognizer</span> *tap = [[<span class="hljs-built_in">UITapGestureRecognizer</span> alloc] initWithActionBlock:^(<span class="hljs-type">id</span> sender) &#123;<br>        <span class="hljs-keyword">if</span> (tapAction) &#123;<br>            tapAction();<br>        &#125;<br>    &#125;];<br>    label.userInteractionEnabled = <span class="hljs-literal">YES</span>;<br>    [label addGestureRecognizer:tap];<br>    <span class="hljs-keyword">return</span> label;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - For UIButton</span><br>+ (<span class="hljs-built_in">UIButton</span> *)createButtonWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                              title:(<span class="hljs-built_in">NSString</span> *)title<br>                           fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                             action:(<span class="hljs-type">void</span>(^)())action<br>&#123;<br>    <span class="hljs-built_in">UIButton</span> *button = [<span class="hljs-built_in">UIButton</span> buttonWithType:<span class="hljs-built_in">UIButtonTypeCustom</span>];<br>    button.frame = frame;<br>    [button setTitle:title forState:<span class="hljs-built_in">UIControlStateNormal</span>];<br>    <span class="hljs-keyword">if</span> (fontSize &gt; <span class="hljs-number">0</span>) &#123;<br>        button.titleLabel.font = [<span class="hljs-built_in">UIFont</span> systemFontOfSize:fontSize];<br>    &#125;<br>    [button addBlockForControlEvents:<span class="hljs-built_in">UIControlEventTouchUpInside</span> block:^(<span class="hljs-type">id</span> sender) &#123;<br>        <span class="hljs-keyword">if</span> (action) &#123;<br>            action();<br>        &#125;<br>    &#125;];<br>    <span class="hljs-keyword">return</span> button;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIButton</span> *)createButtonWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                              title:(<span class="hljs-built_in">NSString</span> *)title<br>                           fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                         titleColor:(<span class="hljs-built_in">UIColor</span> *)titleColor<br>                            bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                             action:(<span class="hljs-type">void</span>(^)())action<br>&#123;<br>    <span class="hljs-built_in">UIButton</span> *button = [<span class="hljs-keyword">self</span> createButtonWithFrame:frame title:title fontSize:fontSize action:action];<br>    [button setTitleColor:titleColor forState:<span class="hljs-built_in">UIControlStateNormal</span>];<br>    button.backgroundColor = bgColor;<br>    <span class="hljs-keyword">return</span> button;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIButton</span> *)createButtonWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                              title:(<span class="hljs-built_in">NSString</span> *)title<br>                           fontSize:(<span class="hljs-built_in">CGFloat</span>)fontSize<br>                         titleColor:(<span class="hljs-built_in">UIColor</span> *)titleColor<br>                            bgColor:(<span class="hljs-built_in">UIColor</span> *)bgColor<br>                       cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>                             action:(<span class="hljs-type">void</span>(^)())action<br>&#123;<br>    <span class="hljs-built_in">UIButton</span> *button = [<span class="hljs-keyword">self</span> createButtonWithFrame:frame title:title fontSize:fontSize titleColor:titleColor bgColor:bgColor action:action];<br>    <span class="hljs-keyword">if</span> (cornerRadius &gt; <span class="hljs-number">0</span>) &#123;<br>        button.clipsToBounds = <span class="hljs-literal">YES</span>;<br>        button.layer.cornerRadius = cornerRadius;<br>    &#125;<br>    <span class="hljs-keyword">return</span> button;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> mark - For UIImageView</span><br>+ (<span class="hljs-built_in">UIImageView</span> *)createImageViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                                imageName:(<span class="hljs-built_in">NSString</span> *)imageName<br>&#123;<br>    <span class="hljs-built_in">UIImageView</span> *imageView = [[<span class="hljs-built_in">UIImageView</span> alloc] initWithFrame:frame];<br>    imageView.contentMode = <span class="hljs-built_in">UIViewContentModeScaleAspectFill</span>;<br>    imageView.image = [<span class="hljs-built_in">UIImage</span> imageNamed:imageName];<br>    <span class="hljs-keyword">return</span> imageView;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIImageView</span> *)createImageViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                             cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>&#123;<br>    <span class="hljs-built_in">UIImageView</span> *imageView = [[<span class="hljs-built_in">UIImageView</span> alloc] initWithFrame:frame];<br>    imageView.contentMode = <span class="hljs-built_in">UIViewContentModeScaleAspectFill</span>;<br>    <span class="hljs-keyword">if</span> (cornerRadius &gt; <span class="hljs-number">0</span>) &#123;<br>        imageView.clipsToBounds = <span class="hljs-literal">YES</span>;<br>        imageView.layer.cornerRadius = cornerRadius;<br>        imageView.layer.masksToBounds = <span class="hljs-literal">YES</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> imageView;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIImageView</span> *)createImageViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                                imageName:(<span class="hljs-built_in">NSString</span> *)imageName<br>                             cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>&#123;<br>    <span class="hljs-built_in">UIImageView</span> *imageView = [<span class="hljs-keyword">self</span> createImageViewWithFrame:frame cornerRadius:cornerRadius];<br>    imageView.image = [<span class="hljs-built_in">UIImage</span> imageNamed:imageName];<br>    <span class="hljs-keyword">return</span> imageView;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIImageView</span> *)createImageViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                                imageName:(<span class="hljs-built_in">NSString</span> *)imageName<br>                             cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>                            actionGesture:(<span class="hljs-built_in">UIGestureRecognizer</span> *)gesture<br>&#123;<br>    <span class="hljs-built_in">UIImageView</span> *imageView = [<span class="hljs-keyword">self</span> createImageViewWithFrame:frame imageName:imageName cornerRadius:cornerRadius];<br>    imageView.userInteractionEnabled = <span class="hljs-literal">YES</span>;<br>    [imageView addGestureRecognizer:gesture];<br>    <span class="hljs-keyword">return</span> imageView;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIImageView</span> *)createImageViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                                imageName:(<span class="hljs-built_in">NSString</span> *)imageName<br>                             cornerRadius:(<span class="hljs-built_in">CGFloat</span>)cornerRadius<br>                                tapAction:(<span class="hljs-type">void</span>(^)())tapAction<br>&#123;<br>    <span class="hljs-built_in">UITapGestureRecognizer</span> *tap = [[<span class="hljs-built_in">UITapGestureRecognizer</span> alloc] initWithActionBlock:^(<span class="hljs-type">id</span> sender) &#123;<br>        <span class="hljs-keyword">if</span> (tapAction) &#123;<br>            tapAction();<br>        &#125;<br>    &#125;];<br>    <span class="hljs-built_in">UIImageView</span> *imageView = [<span class="hljs-keyword">self</span> createImageViewWithFrame:frame imageName:imageName cornerRadius:cornerRadius actionGesture:tap];<br>    <span class="hljs-keyword">return</span> imageView;<br>&#125;<br><br>+ (<span class="hljs-built_in">UIImageView</span> *)createImageViewWithFrame:(<span class="hljs-built_in">CGRect</span>)frame<br>                                imageName:(<span class="hljs-built_in">NSString</span> *)imageName<br>                              roundCorner:(<span class="hljs-type">BOOL</span>)roundCorner<br>                                tapAction:(<span class="hljs-type">void</span>(^)())tapAction<br>&#123;<br>    <span class="hljs-built_in">CGFloat</span> cornerRadius = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (roundCorner) &#123;<br>        cornerRadius = frame.size.width / <span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-keyword">self</span> createImageViewWithFrame:frame imageName:imageName cornerRadius:cornerRadius tapAction:tapAction];<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>UIKit</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>NSArray、NSDictionary、NSString 容错处理</title>
    <link href="/2016/06/30/NSArray%E3%80%81NSDictionary%E3%80%81NSString-%E5%AE%B9%E9%94%99%E5%A4%84%E7%90%86/"/>
    <url>/2016/06/30/NSArray%E3%80%81NSDictionary%E3%80%81NSString-%E5%AE%B9%E9%94%99%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>开发中常常因为服务端数据异常容易导致APP崩溃，以及程序数组字典字符串取值时容易崩溃的问题，我们需写各自的分类来扩展方法进行容错处理</p><h1 id="NSArray"><a href="#NSArray" class="headerlink" title="NSArray"></a>NSArray</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">- (<span class="hljs-built_in">id</span>)safeObjectAtIndex:(NSUInteger)index &#123;<br>  <span class="hljs-keyword">if</span> (index &lt; self.count) &#123;<br>    <span class="hljs-built_in">id</span> <span class="hljs-built_in">object</span> = self[index];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">object</span> == [NSNull null]) &#123;<br>      <span class="hljs-keyword">return</span> nil;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">object</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> nil;<br>&#125;<br><br>- (void)safeAddObject:(<span class="hljs-built_in">id</span>)<span class="hljs-built_in">object</span>&#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">object</span>) &#123;<br>    [self addObject:<span class="hljs-built_in">object</span>];<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="NSDictionary"><a href="#NSDictionary" class="headerlink" title="NSDictionary"></a>NSDictionary</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">- (<span class="hljs-built_in">id</span>)safeObjectForKey:(<span class="hljs-built_in">id</span>)aKey<br>&#123;<br>  <span class="hljs-built_in">id</span> <span class="hljs-built_in">object</span> = [self objectForKey:aKey];<br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">object</span> == [NSNull null]) &#123;<br>    <span class="hljs-keyword">return</span> nil;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">object</span>;<br>&#125;<br><br>- (void)safeSetObject:(<span class="hljs-built_in">id</span>)anObject forKey:(<span class="hljs-built_in">id</span>)aKey&#123;<br>  <span class="hljs-keyword">if</span>(!aKey) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(anObject) &#123;<br>    [self setObject:anObject forKey:aKey];<br>  &#125;<br>&#125;<br><br>- (void)safeRemoveObjectForKey:(<span class="hljs-built_in">id</span>)aKey &#123;<br>  <span class="hljs-keyword">if</span>(aKey) &#123;<br>    [self removeObjectForKey:aKey];<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="NSString"><a href="#NSString" class="headerlink" title="NSString"></a>NSString</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-operator">-</span> (<span class="hljs-type">NSString</span> <span class="hljs-operator">*</span>)safeCharacterAtIndex:(<span class="hljs-type">NSUInteger</span>)index &#123;<br>    <span class="hljs-keyword">if</span> (index <span class="hljs-operator">&lt;</span> <span class="hljs-keyword">self</span>.length) &#123;<br>        <span class="hljs-keyword">return</span> [<span class="hljs-type">NSString</span> stringWithFormat:@<span class="hljs-string">&quot;%C&quot;</span>,[<span class="hljs-keyword">self</span> characterAtIndex:index]];<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-operator">-</span> (<span class="hljs-type">NSString</span> <span class="hljs-operator">*</span>)safeSubstringFromIndex:(<span class="hljs-type">NSUInteger</span>)from &#123;<br>  <span class="hljs-keyword">if</span> (from <span class="hljs-operator">&lt;</span> <span class="hljs-keyword">self</span>.length) &#123;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-keyword">self</span> substringFromIndex:from];<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-operator">-</span> (<span class="hljs-type">NSString</span> <span class="hljs-operator">*</span>)safeSubstringToIndex:(<span class="hljs-type">NSUInteger</span>)to &#123;<br>  <span class="hljs-keyword">if</span> (to <span class="hljs-operator">&lt;</span> <span class="hljs-keyword">self</span>.length) &#123;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-keyword">self</span> substringToIndex:to];<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-operator">-</span> (<span class="hljs-type">NSString</span> <span class="hljs-operator">*</span>)safeSubstringWithRange:(<span class="hljs-type">NSRange</span>)range &#123;<br>  <span class="hljs-keyword">if</span> (range.location <span class="hljs-operator">&lt;</span> <span class="hljs-keyword">self</span>.length <span class="hljs-operator">&amp;&amp;</span> range.location <span class="hljs-operator">+</span> range.length <span class="hljs-operator">&lt;</span> <span class="hljs-keyword">self</span>.length) &#123;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-keyword">self</span> substringWithRange:range];<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Foundation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iOS 常用单例宏</title>
    <link href="/2016/06/29/iOS-%E5%B8%B8%E7%94%A8%E5%8D%95%E4%BE%8B%E5%AE%8F/"/>
    <url>/2016/06/29/iOS-%E5%B8%B8%E7%94%A8%E5%8D%95%E4%BE%8B%E5%AE%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="在你的宏文件里面加入单例宏，快捷创建单例"><a href="#在你的宏文件里面加入单例宏，快捷创建单例" class="headerlink" title="在你的宏文件里面加入单例宏，快捷创建单例"></a>在你的宏文件里面加入单例宏，快捷创建单例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">#define SINGLETON_INTERFACE(className) + (instancetype)shared##className;<br><br>#define SINGLETON_IMPLEMENTATION(className) \<br>static id instance; \<br>+ (instancetype)allocWithZone:(struct _NSZone *)zone &#123; \<br>    static dispatch_once_t onceToken; \<br>    dispatch_once(&amp;onceToken, ^&#123; \<br>        instance = [super allocWithZone:zone]; \<br>    &#125;); \<br>    return instance; \<br>&#125; \<br> \<br>+ (instancetype)shared##className &#123; \<br>    static dispatch_once_t onceToken; \<br>    dispatch_once(&amp;onceToken, ^&#123; \<br>        instance = [[self alloc] init]; \<br>    &#125;); \<br>    return instance; \<br>&#125; \<br> \<br>- (id)copyWithZone:(NSZone *)zone &#123; \<br>    return instance; \<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><h3 id="h"><a href="#h" class="headerlink" title=".h"></a>.h</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">SINGLETON_INTERFACE(Service)<br></code></pre></td></tr></table></figure><h3 id="m"><a href="#m" class="headerlink" title=".m"></a>.m</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs objective-c">SINGLETON_IMPLEMENTATION(Service)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>宏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>宏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS项目开发需要导进的常用第三方库</title>
    <link href="/2016/04/08/iOS%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E9%9C%80%E8%A6%81%E5%AF%BC%E8%BF%9B%E7%9A%84%E5%B8%B8%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    <url>/2016/04/08/iOS%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E9%9C%80%E8%A6%81%E5%AF%BC%E8%BF%9B%E7%9A%84%E5%B8%B8%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p><strong><a href="https://github.com/ibireme/YYKit">YYKit</a></strong>  多功能组件</p><p><strong><a href="https://github.com/MakeZL/MLPhotoLib">MLPhotoLib</a> <a href="https://github.com/banchichen/TZImagePickerController">TZImagePickerController</a></strong> <a href="https://github.com/mwaterfall/MWPhotoBrowser">MWPhotoBrowser</a> <a href="https://github.com/ideaismobile/IDMPhotoBrowser">IDMPhotoBrowser</a>  <a href="https://github.com/chiunam/CTAssetsPickerController">CTAssetsPickerController</a> <strong><a href="https://github.com/skx926/KSPhotoBrowser">KSPhotoBrowser</a>  <a href="https://github.com/jaredsinclair/JTSImageViewController">JTSImageViewController</a></strong>  图片选择、浏览</p><p><strong><a href="https://github.com/hackiftekhar/IQKeyboardManager">IQKeyboardManager</a>  <a href="https://github.com/michaeltyson/TPKeyboardAvoiding">TPKeyboardAvoiding</a></strong>   键盘遮挡输入框的处理</p><p><strong><a href="https://github.com/MortimerGoro/MGSwipeTableCell">MGSwipeTableCell</a></strong>   <strong><a href="https://github.com/alikaragoz/MCSwipeTableViewCell">MCSwipeTableViewCell</a></strong>  cell的左右按钮</p><p><strong><a href="https://github.com/Draveness/DKNightVersion">DKNightVersion</a></strong> 夜间模式</p><p><strong><a href="https://github.com/ninjinkun/NJKWebViewProgress">NJKWebViewProgress</a></strong>  webview的进度条指示</p><p><strong><a href="https://github.com/raozhizhen/JMRoundedCorner">JMRoundedCorner</a></strong>  UIView设置不触发离屏渲染的圆角</p><p><strong><a href="https://github.com/STShenZhaoliang/STPickerView">STPickerView</a></strong>  一个多功能的选择器,有城市选择，日期选择和单数组源自定的功能，方便大家的使用,低耦合,易扩展</p><p><strong><a href="https://github.com/realm/realm-cocoa">realm-cocoa</a></strong>  对象数据库</p><p><strong><a href="https://github.com/Aufree/Hodor">Hodor</a></strong>   是一套可让你的应用快速支持本地化的解决方案, 允许你在应用内直接更改应用语言而无需退出应用, 类似微信.</p><p><strong><a href="https://github.com/NghiaTranUIT/FeSpinner">FeSpinner</a></strong>  一套炫酷的loading视图</p><p><strong><a href="https://github.com/jverdi/JVFloatLabeledTextField">JVFloatLabeledTextField</a></strong>  浮动title的输入框</p><p><strong><a href="https://github.com/schneiderandre/popping">popping</a></strong> 动画集合</p><p><strong><a href="https://github.com/MatthewYork/MYBlurIntroductionView">MYBlurIntroductionView</a></strong>  <strong><a href="https://github.com/mamaral/Onboard">Onboard</a></strong>  <strong><a href="https://github.com/ealeksandrov/EAIntroView">EAIntroView</a></strong>  引导页</p><p><strong><a href="https://github.com/ViccAlexander/Chameleon">Chameleon</a></strong>  色彩框架</p><p><strong><a href="https://github.com/RuiAAPeres/UIViewController-Swizzled">UIViewController-Swizzled</a></strong>  打印视图控制器的路径</p><p><strong><a href="https://github.com/intuit/LocationManager">LocationManager</a></strong>  快速定位</p><p><strong><a href="https://github.com/arashpayan/appirater">appirater</a></strong>  提醒用户给APP打分</p><p><strong><a href="https://github.com/cwRichardKim/RKNotificationHub">RKNotificationHub</a></strong>   给UIView加上badge</p><p><strong><a href="https://github.com/xmartlabs/XLForm">XLForm</a></strong>   is the most flexible and powerful iOS library to create dynamic table-view forms.</p><p><strong><a href="https://github.com/agdsdl/DLSlideView">DLSlideView</a></strong>   DLSlideView对常见的顶部Tab页点击、滑动分页做了封装。 它使用基于ViewController的container特性</p><p><strong><a href="https://github.com/TTTAttributedLabel/TTTAttributedLabel">TTTAttributedLabel</a></strong>   A drop-in replacement for UILabel that supports attributes, data detectors, links, and more</p><p><strong><a href="https://github.com/gsdios/SDCycleScrollView">SDCycleScrollView</a></strong>   “iOS第一图片轮播器” 无限循环图片轮播器。</p><p><strong><a href="https://github.com/wwdc14/HySubmitTransitionObjective-C">HySubmitTransitionObjective-C</a></strong>   用于登录按钮的OC版的转场动画</p><p><strong><a href="https://github.com/KrauseFx/TSMessages">TSMessages</a></strong>  <strong><a href="https://github.com/cruffenach/CRToast">CRToast</a></strong>   Easy to use and customizable messages&#x2F;notifications for iOS</p><p><strong><a href="https://github.com/jaydee3/JDStatusBarNotification">JDStatusBarNotification</a></strong>   状态栏通知</p><p><strong><a href="https://github.com/facebook/KVOController">KVOController</a></strong>   Simple, modern, thread-safe key-value observing for iOS—-Facebook</p><p><strong><a href="https://github.com/bryankeller/BLKFlexibleHeightBar">BLKFlexibleHeightBar</a></strong>   Create condensing header bars like those seen in the Facebook Safari iOS apps.</p><p><strong><a href="https://github.com/mattt/FormatterKit">FormatterKit</a></strong>  常用format集合</p><p><strong><a href="https://github.com/zwaldowski/BlocksKit">BlocksKit</a></strong>    block风格封装</p><p><strong><a href="https://github.com/shaojiankui/iOS-Categories">iOS-Categories</a></strong>   分类集合</p><p><strong><a href="https://github.com/Grouper/FlatUIKit">FlatUIKit</a></strong>    A collection of awesome flat UI components for iOS.</p><p><strong><a href="https://github.com/coolnameismy/BabyBluetooth">BabyBluetooth</a></strong>   CoreBluetooth封装，蓝牙开发</p><p><strong><a href="https://github.com/marcuswestin/WebViewJavascriptBridge">WebViewJavascriptBridge</a></strong>   js和oc交互</p><p><strong><a href="https://github.com/SVProgressHUD/SVProgressHUD">SVProgressHUD</a></strong>  <strong><a href="https://github.com/jdg/MBProgressHUD">MBProgressHUD</a></strong>  提示框</p><p><a href="https://github.com/liyong03/YLGIFImage">YLGIFImage</a>   动态图，sdwebimage自带的也可以</p><p><strong><a href="https://github.com/jamztang/CSStickyHeaderFlowLayout">CSStickyHeaderFlowLayout</a></strong>   UICollectionView replacement of UITableView. Do even more like Parallax Header, Sticky Section Header</p><p><a href="https://github.com/recruit-mp/RMPZoomTransitionAnimator">RMPZoomTransitionAnimator</a>   <a href="https://github.com/mayuur/MJTransitionEffect">MJTransitionEffect</a>   列表到详情界面的转场动画</p><p><a href="https://github.com/Sephiroth87/ODRefreshControl">ODRefreshControl</a>  QQ下拉刷新样式控件</p><p><a href="https://github.com/12207480/TYAlertController">TYAlertController</a>  <a href="https://github.com/nimati/FCAlertView">FCAlertView</a>  自定义弹窗</p><p><a href="https://github.com/li6185377/LKDBHelper-SQLite-ORM">LKDBHelper-SQLite-ORM</a>  <a href="https://github.com/yuantiku/YTKKeyValueStore">YTKKeyValueStore</a>   数据库</p><p><a href="https://github.com/ko1o/PYSearch">PYSearch</a>  搜索功能</p><p><a href="https://github.com/CoderZhuXH/XHLaunchAd">XHLaunchAd</a>  启动广告</p><p><a href="https://github.com/yuantiku/YTKNetwork">YTKNetwork</a>  网络请求</p><p><a href="https://github.com/tianzhuo112/VTMagic">VTMagic</a>  滑动分页</p><p><a href="https://github.com/chasseurmic/TWRDownloadManager">TWRDownloadManager</a>  下载工具</p><p><a href="https://github.com/kevinzhow/PNChart">PNChart</a>  图表</p><p><a href="https://github.com/iTofu/LCActionSheet">LCActionSheet</a>   微博、微信的ActionSheet</p><p><a href="https://github.com/WenchaoD/FSCalendar">FSCalendar</a>  日历</p><p><a href="https://github.com/HeshamMegid/HMSegmentedControl">HMSegmentedControl</a>   自定义segment</p><p><a href="https://github.com/devedbox/AXWebViewController">AXWebViewController</a>   微信样式webView</p>]]></content>
    
    
    <categories>
      
      <category>开源库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
